ARM GAS  /tmp/ccsp5bek.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f2xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_RCC_DeInit:
  25              	.LFB72:
  26              		.file 1 "Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c"
   1:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
   2:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @file    stm32f2xx_hal_rcc.c
   4:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  11:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  26:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /tmp/ccsp5bek.s 			page 2


  33:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  36:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  48:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  53:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  57:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  60:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  65:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  67:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  68:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #include "stm32f2xx_hal.h"
  70:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  71:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @addtogroup STM32F2xx_HAL_Driver
  72:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  74:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  75:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  79:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  80:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  82:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  85:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
  86:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  87:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s */
  88:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  89:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccsp5bek.s 			page 3


  90:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  91:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  92:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  93:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  94:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  95:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  96:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  97:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
  98:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
 104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @}
 107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *  @{
 113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *
 118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @verbatim
 119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
 123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        and APB2).
 126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              the PLL as System clock source.
 130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock source.
 133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 120 MHz)
 141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
ARM GAS  /tmp/ccsp5bek.s 			page 4


 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M3 NMI
 148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              HSE and PLL.
 159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 from an external clock mapped on the I2S_CKIN pin.
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 divided by 2 to 31. You have to use __HAL_RCC_RTC_CONFIG() and __HAL_RCC_RTC_ENABLE
 172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 macros to configure this clock.
 173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 to work correctly, while the SDIO require a frequency equal or lower than
 175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 to 48. This clock is derived of the main PLL through PLLQ divider.
 176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) For the stm32f2xx devices, the maximum
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 120 MHz, PCLK2 60 MHz and PCLK1 30 MHz.
 180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              be adapted accordingly:
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  +-------------------------------------------------------------------------------------+
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |               |---------------------------------------------------------------------|
 185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
 191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 120|72 < HCLK <= 90  |64 < HCLK <= 80  |
 197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |5WS(6CPU cycle)|      NA        |      NA        |90 < HCLK <= 108 |80 < HCLK <= 96  |
 199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |6WS(7CPU cycle)|      NA        |      NA        |108 < HCLK <= 120|96 < HCLK <= 112 |
 201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |7WS(8CPU cycle)|      NA        |      NA        |       NA        |112 < HCLK <= 120|
 203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  +-------------------------------------------------------------------------------------+
ARM GAS  /tmp/ccsp5bek.s 			page 5


 204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @endverbatim
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - All interrupts disabled
 216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - Peripheral clocks
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval HAL status
 220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
  27              		.loc 1 222 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
  38              		.loc 1 223 3 view .LVU1
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick*/
 226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  39              		.loc 1 226 3 view .LVU2
  40              		.loc 1 226 15 is_stmt 0 view .LVU3
  41 0002 FFF7FEFF 		bl	HAL_GetTick
  42              	.LVL0:
  43 0006 0446     		mov	r4, r0
  44              	.LVL1:
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  45              		.loc 1 229 3 is_stmt 1 view .LVU4
  46 0008 3D4A     		ldr	r2, .L24
  47 000a 1368     		ldr	r3, [r2]
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1360     		str	r3, [r2]
 230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till HSI is ready */
 232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  50              		.loc 1 232 3 view .LVU5
  51              	.LVL2:
  52              	.L2:
  53              		.loc 1 232 9 view .LVU6
  54              		.loc 1 232 10 is_stmt 0 view .LVU7
ARM GAS  /tmp/ccsp5bek.s 			page 6


  55 0012 3B4B     		ldr	r3, .L24
  56 0014 1B68     		ldr	r3, [r3]
  57              		.loc 1 232 9 view .LVU8
  58 0016 13F0020F 		tst	r3, #2
  59 001a 06D1     		bne	.L19
 233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  60              		.loc 1 234 5 is_stmt 1 view .LVU9
  61              		.loc 1 234 10 is_stmt 0 view .LVU10
  62 001c FFF7FEFF 		bl	HAL_GetTick
  63              	.LVL3:
  64              		.loc 1 234 24 view .LVU11
  65 0020 001B     		subs	r0, r0, r4
  66              		.loc 1 234 8 view .LVU12
  67 0022 0228     		cmp	r0, #2
  68 0024 F5D9     		bls	.L2
 235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
  69              		.loc 1 236 14 view .LVU13
  70 0026 0320     		movs	r0, #3
  71              	.L3:
 237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set HSITRIM[4:0] bits to the reset value */
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSITRIM_4);
 242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick*/
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Reset CFGR register (HSI is selected as system clock source) */
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->CFGR = 0x00000000u;
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
 251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick */
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Clear CR register in 3 steps: first to clear HSEON, HSEBYP and CSSON bits */
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSEBYP | RCC_CR_CSSON);
 263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
ARM GAS  /tmp/ccsp5bek.s 			page 7


 273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick */
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Second step is to clear PLLON bit */
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Once PLL is OFF, reset PLLCFGR register to default value */
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLQ_2;
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick */
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Third step is to clear PLLI2SON bit */
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLI2SON);
 296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till PLLI2S is disabled */
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) != RESET)
 299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Once PLLI2S is OFF, reset PLLI2SCFGR register to default value */
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 | RCC_PLLI2SCFGR_PLLI2SR_1;
 308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Disable all interrupts */
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->CIR = 0x00000000u;
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Clear all flags */
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->CSR = 0xFFFFFFFFu;
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_ERROR;
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_OK;
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
  72              		.loc 1 327 1 view .LVU14
  73 0028 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccsp5bek.s 			page 8


  74              	.LVL4:
  75              	.L19:
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  76              		.loc 1 241 3 is_stmt 1 view .LVU15
  77 002a 354D     		ldr	r5, .L24
  78 002c 2B68     		ldr	r3, [r5]
  79 002e 43F08003 		orr	r3, r3, #128
  80 0032 2B60     		str	r3, [r5]
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  81              		.loc 1 244 3 view .LVU16
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  82              		.loc 1 244 15 is_stmt 0 view .LVU17
  83 0034 FFF7FEFF 		bl	HAL_GetTick
  84              	.LVL5:
  85 0038 0446     		mov	r4, r0
  86              	.LVL6:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  87              		.loc 1 247 3 is_stmt 1 view .LVU18
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  88              		.loc 1 247 13 is_stmt 0 view .LVU19
  89 003a 0023     		movs	r3, #0
  90 003c AB60     		str	r3, [r5, #8]
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  91              		.loc 1 250 3 is_stmt 1 view .LVU20
  92              	.LVL7:
  93              	.L5:
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  94              		.loc 1 250 9 view .LVU21
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  95              		.loc 1 250 10 is_stmt 0 view .LVU22
  96 003e 304B     		ldr	r3, .L24
  97 0040 9B68     		ldr	r3, [r3, #8]
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  98              		.loc 1 250 9 view .LVU23
  99 0042 13F00C0F 		tst	r3, #12
 100 0046 08D0     		beq	.L20
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 101              		.loc 1 252 5 is_stmt 1 view .LVU24
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 102              		.loc 1 252 10 is_stmt 0 view .LVU25
 103 0048 FFF7FEFF 		bl	HAL_GetTick
 104              	.LVL8:
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 105              		.loc 1 252 24 view .LVU26
 106 004c 001B     		subs	r0, r0, r4
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 107              		.loc 1 252 8 view .LVU27
 108 004e 41F28833 		movw	r3, #5000
 109 0052 9842     		cmp	r0, r3
 110 0054 F3D9     		bls	.L5
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 111              		.loc 1 254 14 view .LVU28
 112 0056 0320     		movs	r0, #3
 113 0058 E6E7     		b	.L3
 114              	.L20:
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 115              		.loc 1 259 3 is_stmt 1 view .LVU29
ARM GAS  /tmp/ccsp5bek.s 			page 9


 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 116              		.loc 1 259 15 is_stmt 0 view .LVU30
 117 005a FFF7FEFF 		bl	HAL_GetTick
 118              	.LVL9:
 119 005e 0446     		mov	r4, r0
 120              	.LVL10:
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 121              		.loc 1 262 3 is_stmt 1 view .LVU31
 122 0060 274A     		ldr	r2, .L24
 123 0062 1368     		ldr	r3, [r2]
 124 0064 23F45023 		bic	r3, r3, #851968
 125 0068 1360     		str	r3, [r2]
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 126              		.loc 1 265 3 view .LVU32
 127              	.LVL11:
 128              	.L7:
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 129              		.loc 1 265 9 view .LVU33
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 130              		.loc 1 265 10 is_stmt 0 view .LVU34
 131 006a 254B     		ldr	r3, .L24
 132 006c 1B68     		ldr	r3, [r3]
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 133              		.loc 1 265 9 view .LVU35
 134 006e 13F4003F 		tst	r3, #131072
 135 0072 06D0     		beq	.L21
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 136              		.loc 1 267 5 is_stmt 1 view .LVU36
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 137              		.loc 1 267 10 is_stmt 0 view .LVU37
 138 0074 FFF7FEFF 		bl	HAL_GetTick
 139              	.LVL12:
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 140              		.loc 1 267 24 view .LVU38
 141 0078 001B     		subs	r0, r0, r4
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 142              		.loc 1 267 8 view .LVU39
 143 007a 6428     		cmp	r0, #100
 144 007c F5D9     		bls	.L7
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 145              		.loc 1 269 14 view .LVU40
 146 007e 0320     		movs	r0, #3
 147 0080 D2E7     		b	.L3
 148              	.L21:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 149              		.loc 1 274 3 is_stmt 1 view .LVU41
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 150              		.loc 1 274 15 is_stmt 0 view .LVU42
 151 0082 FFF7FEFF 		bl	HAL_GetTick
 152              	.LVL13:
 153 0086 0446     		mov	r4, r0
 154              	.LVL14:
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 155              		.loc 1 277 3 is_stmt 1 view .LVU43
 156 0088 1D4A     		ldr	r2, .L24
 157 008a 1368     		ldr	r3, [r2]
 158 008c 23F08073 		bic	r3, r3, #16777216
ARM GAS  /tmp/ccsp5bek.s 			page 10


 159 0090 1360     		str	r3, [r2]
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 160              		.loc 1 280 3 view .LVU44
 161              	.LVL15:
 162              	.L9:
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 163              		.loc 1 280 9 view .LVU45
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 164              		.loc 1 280 10 is_stmt 0 view .LVU46
 165 0092 1B4B     		ldr	r3, .L24
 166 0094 1B68     		ldr	r3, [r3]
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 167              		.loc 1 280 9 view .LVU47
 168 0096 13F0007F 		tst	r3, #33554432
 169 009a 06D0     		beq	.L22
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 170              		.loc 1 282 5 is_stmt 1 view .LVU48
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 171              		.loc 1 282 10 is_stmt 0 view .LVU49
 172 009c FFF7FEFF 		bl	HAL_GetTick
 173              	.LVL16:
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 174              		.loc 1 282 24 view .LVU50
 175 00a0 001B     		subs	r0, r0, r4
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 176              		.loc 1 282 8 view .LVU51
 177 00a2 6428     		cmp	r0, #100
 178 00a4 F5D9     		bls	.L9
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 179              		.loc 1 284 14 view .LVU52
 180 00a6 0320     		movs	r0, #3
 181 00a8 BEE7     		b	.L3
 182              	.L22:
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 183              		.loc 1 289 3 is_stmt 1 view .LVU53
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 184              		.loc 1 289 16 is_stmt 0 view .LVU54
 185 00aa 154D     		ldr	r5, .L24
 186 00ac 154B     		ldr	r3, .L24+4
 187 00ae 6B60     		str	r3, [r5, #4]
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 188              		.loc 1 292 3 is_stmt 1 view .LVU55
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 189              		.loc 1 292 15 is_stmt 0 view .LVU56
 190 00b0 FFF7FEFF 		bl	HAL_GetTick
 191              	.LVL17:
 192 00b4 0446     		mov	r4, r0
 193              	.LVL18:
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 194              		.loc 1 295 3 is_stmt 1 view .LVU57
 195 00b6 2B68     		ldr	r3, [r5]
 196 00b8 23F08063 		bic	r3, r3, #67108864
 197 00bc 2B60     		str	r3, [r5]
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 198              		.loc 1 298 3 view .LVU58
 199              	.LVL19:
 200              	.L11:
ARM GAS  /tmp/ccsp5bek.s 			page 11


 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 201              		.loc 1 298 9 view .LVU59
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 202              		.loc 1 298 10 is_stmt 0 view .LVU60
 203 00be 104B     		ldr	r3, .L24
 204 00c0 1B68     		ldr	r3, [r3]
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 205              		.loc 1 298 9 view .LVU61
 206 00c2 13F0006F 		tst	r3, #134217728
 207 00c6 06D0     		beq	.L23
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 208              		.loc 1 300 5 is_stmt 1 view .LVU62
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 209              		.loc 1 300 10 is_stmt 0 view .LVU63
 210 00c8 FFF7FEFF 		bl	HAL_GetTick
 211              	.LVL20:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 212              		.loc 1 300 24 view .LVU64
 213 00cc 001B     		subs	r0, r0, r4
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 214              		.loc 1 300 8 view .LVU65
 215 00ce 0228     		cmp	r0, #2
 216 00d0 F5D9     		bls	.L11
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 217              		.loc 1 302 14 view .LVU66
 218 00d2 0320     		movs	r0, #3
 219 00d4 A8E7     		b	.L3
 220              	.L23:
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 221              		.loc 1 307 3 is_stmt 1 view .LVU67
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 222              		.loc 1 307 19 is_stmt 0 view .LVU68
 223 00d6 0A4B     		ldr	r3, .L24
 224 00d8 0B4A     		ldr	r2, .L24+8
 225 00da C3F88420 		str	r2, [r3, #132]
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 226              		.loc 1 310 3 is_stmt 1 view .LVU69
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 227              		.loc 1 310 12 is_stmt 0 view .LVU70
 228 00de 0022     		movs	r2, #0
 229 00e0 DA60     		str	r2, [r3, #12]
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 230              		.loc 1 313 3 is_stmt 1 view .LVU71
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 231              		.loc 1 313 12 is_stmt 0 view .LVU72
 232 00e2 4FF0FF32 		mov	r2, #-1
 233 00e6 5A67     		str	r2, [r3, #116]
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 234              		.loc 1 316 3 is_stmt 1 view .LVU73
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 235              		.loc 1 316 19 is_stmt 0 view .LVU74
 236 00e8 084B     		ldr	r3, .L24+12
 237 00ea 094A     		ldr	r2, .L24+16
 238 00ec 1A60     		str	r2, [r3]
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 239              		.loc 1 319 3 is_stmt 1 view .LVU75
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccsp5bek.s 			page 12


 240              		.loc 1 319 6 is_stmt 0 view .LVU76
 241 00ee 094B     		ldr	r3, .L24+20
 242 00f0 1868     		ldr	r0, [r3]
 243 00f2 FFF7FEFF 		bl	HAL_InitTick
 244              	.LVL21:
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 245              		.loc 1 319 5 view .LVU77
 246 00f6 0028     		cmp	r0, #0
 247 00f8 96D0     		beq	.L3
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 248              		.loc 1 321 12 view .LVU78
 249 00fa 0120     		movs	r0, #1
 250 00fc 94E7     		b	.L3
 251              	.L25:
 252 00fe 00BF     		.align	2
 253              	.L24:
 254 0100 00380240 		.word	1073887232
 255 0104 10300004 		.word	67121168
 256 0108 00300020 		.word	536883200
 257 010c 00000000 		.word	SystemCoreClock
 258 0110 0024F400 		.word	16000000
 259 0114 00000000 		.word	uwTickPrio
 260              		.cfi_endproc
 261              	.LFE72:
 263              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 264              		.align	1
 265              		.global	HAL_RCC_OscConfig
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu softvfp
 271              	HAL_RCC_OscConfig:
 272              	.LVL22:
 273              	.LFB73:
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval HAL status
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 274              		.loc 1 344 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 278              		.loc 1 345 3 view .LVU80
ARM GAS  /tmp/ccsp5bek.s 			page 13


 346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check Null pointer */
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 279              		.loc 1 348 3 view .LVU81
 280              		.loc 1 348 5 is_stmt 0 view .LVU82
 281 0000 0028     		cmp	r0, #0
 282 0002 00F0BB81 		beq	.L70
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 283              		.loc 1 344 1 view .LVU83
 284 0006 70B5     		push	{r4, r5, r6, lr}
 285              	.LCFI1:
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 4, -16
 288              		.cfi_offset 5, -12
 289              		.cfi_offset 6, -8
 290              		.cfi_offset 14, -4
 291 0008 82B0     		sub	sp, sp, #8
 292              	.LCFI2:
 293              		.cfi_def_cfa_offset 24
 294 000a 0446     		mov	r4, r0
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_ERROR;
 351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 295              		.loc 1 354 3 is_stmt 1 view .LVU84
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 296              		.loc 1 356 3 view .LVU85
 297              		.loc 1 356 25 is_stmt 0 view .LVU86
 298 000c 0368     		ldr	r3, [r0]
 299              		.loc 1 356 5 view .LVU87
 300 000e 13F0010F 		tst	r3, #1
 301 0012 2ED0     		beq	.L28
 357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 302              		.loc 1 359 5 is_stmt 1 view .LVU88
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 303              		.loc 1 361 5 view .LVU89
 304              		.loc 1 361 9 is_stmt 0 view .LVU90
 305 0014 934B     		ldr	r3, .L107
 306 0016 9B68     		ldr	r3, [r3, #8]
 307 0018 03F00C03 		and	r3, r3, #12
 308              		.loc 1 361 7 view .LVU91
 309 001c 042B     		cmp	r3, #4
 310 001e 1FD0     		beq	.L29
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 311              		.loc 1 362 9 discriminator 1 view .LVU92
 312 0020 904B     		ldr	r3, .L107
 313 0022 9B68     		ldr	r3, [r3, #8]
 314 0024 03F00C03 		and	r3, r3, #12
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 315              		.loc 1 361 60 discriminator 1 view .LVU93
 316 0028 082B     		cmp	r3, #8
ARM GAS  /tmp/ccsp5bek.s 			page 14


 317 002a 14D0     		beq	.L97
 318              	.L30:
 363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 319              		.loc 1 372 7 is_stmt 1 view .LVU94
 320 002c 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 321 002e 8D4B     		ldr	r3, .L107
 322 0030 9A70     		strb	r2, [r3, #2]
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSE State */
 375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 323              		.loc 1 375 7 view .LVU95
 324              		.loc 1 375 28 is_stmt 0 view .LVU96
 325 0032 6368     		ldr	r3, [r4, #4]
 326              		.loc 1 375 9 view .LVU97
 327 0034 002B     		cmp	r3, #0
 328 0036 40D0     		beq	.L31
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 329              		.loc 1 378 9 is_stmt 1 view .LVU98
 330              		.loc 1 378 21 is_stmt 0 view .LVU99
 331 0038 FFF7FEFF 		bl	HAL_GetTick
 332              	.LVL23:
 333              		.loc 1 378 21 view .LVU100
 334 003c 0546     		mov	r5, r0
 335              	.LVL24:
 379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSE is ready */
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 336              		.loc 1 381 9 is_stmt 1 view .LVU101
 337              	.L32:
 338              		.loc 1 381 14 view .LVU102
 339              		.loc 1 381 15 is_stmt 0 view .LVU103
 340 003e 894B     		ldr	r3, .L107
 341 0040 1B68     		ldr	r3, [r3]
 342              		.loc 1 381 14 view .LVU104
 343 0042 13F4003F 		tst	r3, #131072
 344 0046 14D1     		bne	.L28
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 345              		.loc 1 383 11 is_stmt 1 view .LVU105
 346              		.loc 1 383 15 is_stmt 0 view .LVU106
 347 0048 FFF7FEFF 		bl	HAL_GetTick
 348              	.LVL25:
 349              		.loc 1 383 29 view .LVU107
 350 004c 401B     		subs	r0, r0, r5
 351              		.loc 1 383 13 view .LVU108
 352 004e 6428     		cmp	r0, #100
ARM GAS  /tmp/ccsp5bek.s 			page 15


 353 0050 F5D9     		bls	.L32
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 354              		.loc 1 385 20 view .LVU109
 355 0052 0320     		movs	r0, #3
 356 0054 99E1     		b	.L27
 357              	.LVL26:
 358              	.L97:
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 359              		.loc 1 362 68 view .LVU110
 360 0056 834B     		ldr	r3, .L107
 361 0058 5B68     		ldr	r3, [r3, #4]
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 362              		.loc 1 362 60 view .LVU111
 363 005a 13F4800F 		tst	r3, #4194304
 364 005e E5D0     		beq	.L30
 365              	.L29:
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 366              		.loc 1 364 7 is_stmt 1 view .LVU112
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 367              		.loc 1 364 11 is_stmt 0 view .LVU113
 368 0060 804B     		ldr	r3, .L107
 369 0062 1B68     		ldr	r3, [r3]
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 370              		.loc 1 364 9 view .LVU114
 371 0064 13F4003F 		tst	r3, #131072
 372 0068 03D0     		beq	.L28
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 373              		.loc 1 364 78 discriminator 1 view .LVU115
 374 006a 6368     		ldr	r3, [r4, #4]
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 375              		.loc 1 364 57 discriminator 1 view .LVU116
 376 006c 002B     		cmp	r3, #0
 377 006e 00F08781 		beq	.L98
 378              	.LVL27:
 379              	.L28:
 386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
ARM GAS  /tmp/ccsp5bek.s 			page 16


 380              		.loc 1 406 3 is_stmt 1 view .LVU117
 381              		.loc 1 406 25 is_stmt 0 view .LVU118
 382 0072 2368     		ldr	r3, [r4]
 383              		.loc 1 406 5 view .LVU119
 384 0074 13F0020F 		tst	r3, #2
 385 0078 4AD0     		beq	.L36
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 386              		.loc 1 409 5 is_stmt 1 view .LVU120
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 387              		.loc 1 410 5 view .LVU121
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 388              		.loc 1 413 5 view .LVU122
 389              		.loc 1 413 9 is_stmt 0 view .LVU123
 390 007a 7A4B     		ldr	r3, .L107
 391 007c 9B68     		ldr	r3, [r3, #8]
 392              		.loc 1 413 7 view .LVU124
 393 007e 13F00C0F 		tst	r3, #12
 394 0082 2ED0     		beq	.L37
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 395              		.loc 1 414 9 discriminator 1 view .LVU125
 396 0084 774B     		ldr	r3, .L107
 397 0086 9B68     		ldr	r3, [r3, #8]
 398 0088 03F00C03 		and	r3, r3, #12
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 399              		.loc 1 413 60 discriminator 1 view .LVU126
 400 008c 082B     		cmp	r3, #8
 401 008e 23D0     		beq	.L99
 402              	.L38:
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSI State */
 431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 403              		.loc 1 431 7 is_stmt 1 view .LVU127
 404              		.loc 1 431 28 is_stmt 0 view .LVU128
 405 0090 E368     		ldr	r3, [r4, #12]
 406              		.loc 1 431 9 view .LVU129
 407 0092 002B     		cmp	r3, #0
 408 0094 64D0     		beq	.L40
 432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
ARM GAS  /tmp/ccsp5bek.s 			page 17


 434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 409              		.loc 1 434 9 is_stmt 1 view .LVU130
 410 0096 744B     		ldr	r3, .L107+4
 411 0098 0122     		movs	r2, #1
 412 009a 1A60     		str	r2, [r3]
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 413              		.loc 1 437 9 view .LVU131
 414              		.loc 1 437 21 is_stmt 0 view .LVU132
 415 009c FFF7FEFF 		bl	HAL_GetTick
 416              	.LVL28:
 417 00a0 0546     		mov	r5, r0
 418              	.LVL29:
 438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSI is ready */
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 419              		.loc 1 440 9 is_stmt 1 view .LVU133
 420              	.L41:
 421              		.loc 1 440 14 view .LVU134
 422              		.loc 1 440 15 is_stmt 0 view .LVU135
 423 00a2 704B     		ldr	r3, .L107
 424 00a4 1B68     		ldr	r3, [r3]
 425              		.loc 1 440 14 view .LVU136
 426 00a6 13F0020F 		tst	r3, #2
 427 00aa 4AD1     		bne	.L100
 441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 428              		.loc 1 442 11 is_stmt 1 view .LVU137
 429              		.loc 1 442 15 is_stmt 0 view .LVU138
 430 00ac FFF7FEFF 		bl	HAL_GetTick
 431              	.LVL30:
 432              		.loc 1 442 29 view .LVU139
 433 00b0 401B     		subs	r0, r0, r5
 434              		.loc 1 442 13 view .LVU140
 435 00b2 0228     		cmp	r0, #2
 436 00b4 F5D9     		bls	.L41
 443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 437              		.loc 1 444 20 view .LVU141
 438 00b6 0320     		movs	r0, #3
 439 00b8 67E1     		b	.L27
 440              	.LVL31:
 441              	.L31:
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 442              		.loc 1 392 9 is_stmt 1 view .LVU142
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 443              		.loc 1 392 21 is_stmt 0 view .LVU143
 444 00ba FFF7FEFF 		bl	HAL_GetTick
 445              	.LVL32:
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 446              		.loc 1 392 21 view .LVU144
 447 00be 0546     		mov	r5, r0
 448              	.LVL33:
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 449              		.loc 1 395 9 is_stmt 1 view .LVU145
 450              	.L34:
ARM GAS  /tmp/ccsp5bek.s 			page 18


 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 451              		.loc 1 395 14 view .LVU146
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 452              		.loc 1 395 15 is_stmt 0 view .LVU147
 453 00c0 684B     		ldr	r3, .L107
 454 00c2 1B68     		ldr	r3, [r3]
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 455              		.loc 1 395 14 view .LVU148
 456 00c4 13F4003F 		tst	r3, #131072
 457 00c8 D3D0     		beq	.L28
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 458              		.loc 1 397 11 is_stmt 1 view .LVU149
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 459              		.loc 1 397 15 is_stmt 0 view .LVU150
 460 00ca FFF7FEFF 		bl	HAL_GetTick
 461              	.LVL34:
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 462              		.loc 1 397 29 view .LVU151
 463 00ce 401B     		subs	r0, r0, r5
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 464              		.loc 1 397 13 view .LVU152
 465 00d0 6428     		cmp	r0, #100
 466 00d2 F5D9     		bls	.L34
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 467              		.loc 1 399 20 view .LVU153
 468 00d4 0320     		movs	r0, #3
 469 00d6 58E1     		b	.L27
 470              	.LVL35:
 471              	.L99:
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 472              		.loc 1 414 68 view .LVU154
 473 00d8 624B     		ldr	r3, .L107
 474 00da 5B68     		ldr	r3, [r3, #4]
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 475              		.loc 1 414 60 view .LVU155
 476 00dc 13F4800F 		tst	r3, #4194304
 477 00e0 D6D1     		bne	.L38
 478              	.L37:
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 479              		.loc 1 417 7 is_stmt 1 view .LVU156
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 480              		.loc 1 417 11 is_stmt 0 view .LVU157
 481 00e2 604B     		ldr	r3, .L107
 482 00e4 1B68     		ldr	r3, [r3]
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 483              		.loc 1 417 9 view .LVU158
 484 00e6 13F0020F 		tst	r3, #2
 485 00ea 03D0     		beq	.L39
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 486              		.loc 1 417 78 discriminator 1 view .LVU159
 487 00ec E368     		ldr	r3, [r4, #12]
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 488              		.loc 1 417 57 discriminator 1 view .LVU160
 489 00ee 012B     		cmp	r3, #1
 490 00f0 40F04881 		bne	.L74
 491              	.L39:
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccsp5bek.s 			page 19


 492              		.loc 1 425 9 is_stmt 1 view .LVU161
 493 00f4 5B48     		ldr	r0, .L107
 494 00f6 0368     		ldr	r3, [r0]
 495 00f8 23F0F803 		bic	r3, r3, #248
 496 00fc 2169     		ldr	r1, [r4, #16]
 497              	.LVL36:
 498              	.LBB23:
 499              	.LBI23:
 500              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsp5bek.s 			page 20


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccsp5bek.s 			page 21


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
ARM GAS  /tmp/ccsp5bek.s 			page 22


 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
ARM GAS  /tmp/ccsp5bek.s 			page 23


 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccsp5bek.s 			page 24


 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
ARM GAS  /tmp/ccsp5bek.s 			page 25


 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsp5bek.s 			page 26


 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
ARM GAS  /tmp/ccsp5bek.s 			page 27


 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccsp5bek.s 			page 28


 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsp5bek.s 			page 29


 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /tmp/ccsp5bek.s 			page 30


 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccsp5bek.s 			page 31


 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
ARM GAS  /tmp/ccsp5bek.s 			page 32


 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
ARM GAS  /tmp/ccsp5bek.s 			page 33


 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  /tmp/ccsp5bek.s 			page 34


 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  /tmp/ccsp5bek.s 			page 35


 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/ccsp5bek.s 			page 36


 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 501              		.loc 2 981 31 view .LVU162
 502              	.LBB24:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 503              		.loc 2 983 3 view .LVU163
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 504              		.loc 2 988 4 view .LVU164
 505 00fe F822     		movs	r2, #248
 506              		.syntax unified
 507              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 508 0100 92FAA2F2 		rbit r2, r2
 509              	@ 0 "" 2
 510              	.LVL37:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 511              		.loc 2 1001 3 view .LVU165
 512              		.loc 2 1001 3 is_stmt 0 view .LVU166
 513              		.thumb
 514              		.syntax unified
 515              	.LBE24:
 516              	.LBE23:
ARM GAS  /tmp/ccsp5bek.s 			page 37


 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 517              		.loc 1 425 9 view .LVU167
 518 0104 B2FA82F2 		clz	r2, r2
 519 0108 01FA02F2 		lsl	r2, r1, r2
 520 010c 1343     		orrs	r3, r3, r2
 521 010e 0360     		str	r3, [r0]
 522              	.L36:
 445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSI is ready */
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 523              		.loc 1 471 3 is_stmt 1 view .LVU168
 524              		.loc 1 471 25 is_stmt 0 view .LVU169
 525 0110 2368     		ldr	r3, [r4]
 526              		.loc 1 471 5 view .LVU170
 527 0112 13F0080F 		tst	r3, #8
 528 0116 48D0     		beq	.L45
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 529              		.loc 1 474 5 is_stmt 1 view .LVU171
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the LSI State */
 477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 530              		.loc 1 477 5 view .LVU172
 531              		.loc 1 477 26 is_stmt 0 view .LVU173
 532 0118 6369     		ldr	r3, [r4, #20]
 533              		.loc 1 477 7 view .LVU174
 534 011a 9BB3     		cbz	r3, .L46
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 535              		.loc 1 480 7 is_stmt 1 view .LVU175
 536 011c 524B     		ldr	r3, .L107+4
ARM GAS  /tmp/ccsp5bek.s 			page 38


 537 011e 0122     		movs	r2, #1
 538 0120 C3F8802E 		str	r2, [r3, #3712]
 481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 539              		.loc 1 483 7 view .LVU176
 540              		.loc 1 483 19 is_stmt 0 view .LVU177
 541 0124 FFF7FEFF 		bl	HAL_GetTick
 542              	.LVL38:
 543 0128 0546     		mov	r5, r0
 544              	.LVL39:
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSI is ready */
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 545              		.loc 1 486 7 is_stmt 1 view .LVU178
 546              	.L47:
 547              		.loc 1 486 12 view .LVU179
 548              		.loc 1 486 13 is_stmt 0 view .LVU180
 549 012a 4E4B     		ldr	r3, .L107
 550 012c 5B6F     		ldr	r3, [r3, #116]
 551              		.loc 1 486 12 view .LVU181
 552 012e 13F0020F 		tst	r3, #2
 553 0132 3AD1     		bne	.L45
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 554              		.loc 1 488 9 is_stmt 1 view .LVU182
 555              		.loc 1 488 13 is_stmt 0 view .LVU183
 556 0134 FFF7FEFF 		bl	HAL_GetTick
 557              	.LVL40:
 558              		.loc 1 488 27 view .LVU184
 559 0138 401B     		subs	r0, r0, r5
 560              		.loc 1 488 11 view .LVU185
 561 013a 0228     		cmp	r0, #2
 562 013c F5D9     		bls	.L47
 489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 563              		.loc 1 490 18 view .LVU186
 564 013e 0320     		movs	r0, #3
 565 0140 23E1     		b	.L27
 566              	.L100:
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 567              		.loc 1 449 9 is_stmt 1 view .LVU187
 568 0142 4848     		ldr	r0, .L107
 569 0144 0368     		ldr	r3, [r0]
 570 0146 23F0F803 		bic	r3, r3, #248
 571 014a 2169     		ldr	r1, [r4, #16]
 572              	.LVL41:
 573              	.LBB25:
 574              	.LBI25:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 575              		.loc 2 981 31 view .LVU188
 576              	.LBB26:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577              		.loc 2 983 3 view .LVU189
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 578              		.loc 2 988 4 view .LVU190
 579 014c F822     		movs	r2, #248
ARM GAS  /tmp/ccsp5bek.s 			page 39


 580              		.syntax unified
 581              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 582 014e 92FAA2F2 		rbit r2, r2
 583              	@ 0 "" 2
 584              	.LVL42:
 585              		.loc 2 1001 3 view .LVU191
 586              		.loc 2 1001 3 is_stmt 0 view .LVU192
 587              		.thumb
 588              		.syntax unified
 589              	.LBE26:
 590              	.LBE25:
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 591              		.loc 1 449 9 view .LVU193
 592 0152 B2FA82F2 		clz	r2, r2
 593 0156 01FA02F2 		lsl	r2, r1, r2
 594 015a 1343     		orrs	r3, r3, r2
 595 015c 0360     		str	r3, [r0]
 596 015e D7E7     		b	.L36
 597              	.LVL43:
 598              	.L40:
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 599              		.loc 1 454 9 is_stmt 1 view .LVU194
 600 0160 414B     		ldr	r3, .L107+4
 601 0162 0022     		movs	r2, #0
 602 0164 1A60     		str	r2, [r3]
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 603              		.loc 1 457 9 view .LVU195
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 604              		.loc 1 457 21 is_stmt 0 view .LVU196
 605 0166 FFF7FEFF 		bl	HAL_GetTick
 606              	.LVL44:
 607 016a 0546     		mov	r5, r0
 608              	.LVL45:
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 609              		.loc 1 460 9 is_stmt 1 view .LVU197
 610              	.L43:
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 611              		.loc 1 460 14 view .LVU198
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 612              		.loc 1 460 15 is_stmt 0 view .LVU199
 613 016c 3D4B     		ldr	r3, .L107
 614 016e 1B68     		ldr	r3, [r3]
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 615              		.loc 1 460 14 view .LVU200
 616 0170 13F0020F 		tst	r3, #2
 617 0174 CCD0     		beq	.L36
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 618              		.loc 1 462 11 is_stmt 1 view .LVU201
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 619              		.loc 1 462 15 is_stmt 0 view .LVU202
 620 0176 FFF7FEFF 		bl	HAL_GetTick
 621              	.LVL46:
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 622              		.loc 1 462 29 view .LVU203
 623 017a 401B     		subs	r0, r0, r5
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 624              		.loc 1 462 13 view .LVU204
ARM GAS  /tmp/ccsp5bek.s 			page 40


 625 017c 0228     		cmp	r0, #2
 626 017e F5D9     		bls	.L43
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 627              		.loc 1 464 20 view .LVU205
 628 0180 0320     		movs	r0, #3
 629 0182 02E1     		b	.L27
 630              	.LVL47:
 631              	.L46:
 491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 632              		.loc 1 497 7 is_stmt 1 view .LVU206
 633 0184 384B     		ldr	r3, .L107+4
 634 0186 0022     		movs	r2, #0
 635 0188 C3F8802E 		str	r2, [r3, #3712]
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 636              		.loc 1 500 7 view .LVU207
 637              		.loc 1 500 19 is_stmt 0 view .LVU208
 638 018c FFF7FEFF 		bl	HAL_GetTick
 639              	.LVL48:
 640 0190 0546     		mov	r5, r0
 641              	.LVL49:
 501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSI is ready */
 503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 642              		.loc 1 503 7 is_stmt 1 view .LVU209
 643              	.L49:
 644              		.loc 1 503 12 view .LVU210
 645              		.loc 1 503 13 is_stmt 0 view .LVU211
 646 0192 344B     		ldr	r3, .L107
 647 0194 5B6F     		ldr	r3, [r3, #116]
 648              		.loc 1 503 12 view .LVU212
 649 0196 13F0020F 		tst	r3, #2
 650 019a 06D0     		beq	.L45
 504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 651              		.loc 1 505 9 is_stmt 1 view .LVU213
 652              		.loc 1 505 13 is_stmt 0 view .LVU214
 653 019c FFF7FEFF 		bl	HAL_GetTick
 654              	.LVL50:
 655              		.loc 1 505 27 view .LVU215
 656 01a0 401B     		subs	r0, r0, r5
 657              		.loc 1 505 11 view .LVU216
 658 01a2 0228     		cmp	r0, #2
 659 01a4 F5D9     		bls	.L49
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 660              		.loc 1 507 18 view .LVU217
 661 01a6 0320     		movs	r0, #3
 662 01a8 EFE0     		b	.L27
 663              	.LVL51:
ARM GAS  /tmp/ccsp5bek.s 			page 41


 664              	.L45:
 508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 665              		.loc 1 513 3 is_stmt 1 view .LVU218
 666              		.loc 1 513 25 is_stmt 0 view .LVU219
 667 01aa 2368     		ldr	r3, [r4]
 668              		.loc 1 513 5 view .LVU220
 669 01ac 13F0040F 		tst	r3, #4
 670 01b0 5FD0     		beq	.L51
 671              	.LBB27:
 514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 672              		.loc 1 515 5 is_stmt 1 view .LVU221
 673              	.LVL52:
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 674              		.loc 1 518 5 view .LVU222
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 675              		.loc 1 522 5 view .LVU223
 676              		.loc 1 522 8 is_stmt 0 view .LVU224
 677 01b2 2C4B     		ldr	r3, .L107
 678 01b4 1B6C     		ldr	r3, [r3, #64]
 679              		.loc 1 522 7 view .LVU225
 680 01b6 13F0805F 		tst	r3, #268435456
 681 01ba 2CD1     		bne	.L79
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 682              		.loc 1 524 7 is_stmt 1 view .LVU226
 683              	.LBB28:
 684              		.loc 1 524 7 view .LVU227
 685 01bc 0023     		movs	r3, #0
 686 01be 0193     		str	r3, [sp, #4]
 687              		.loc 1 524 7 view .LVU228
 688 01c0 284B     		ldr	r3, .L107
 689 01c2 1A6C     		ldr	r2, [r3, #64]
 690 01c4 42F08052 		orr	r2, r2, #268435456
 691 01c8 1A64     		str	r2, [r3, #64]
 692              		.loc 1 524 7 view .LVU229
 693 01ca 1B6C     		ldr	r3, [r3, #64]
 694 01cc 03F08053 		and	r3, r3, #268435456
 695 01d0 0193     		str	r3, [sp, #4]
 696              		.loc 1 524 7 view .LVU230
 697 01d2 019B     		ldr	r3, [sp, #4]
 698              	.LBE28:
 699              		.loc 1 524 7 view .LVU231
 525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       pwrclkchanged = SET;
 700              		.loc 1 525 7 view .LVU232
 701              	.LVL53:
 702              		.loc 1 525 21 is_stmt 0 view .LVU233
ARM GAS  /tmp/ccsp5bek.s 			page 42


 703 01d4 0125     		movs	r5, #1
 704              	.LVL54:
 705              	.L52:
 526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     PWR->CR |= PWR_CR_DBP;
 706              		.loc 1 529 5 is_stmt 1 view .LVU234
 707              		.loc 1 529 13 is_stmt 0 view .LVU235
 708 01d6 254B     		ldr	r3, .L107+8
 709 01d8 1A68     		ldr	r2, [r3]
 710 01da 42F48072 		orr	r2, r2, #256
 711 01de 1A60     		str	r2, [r3]
 530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 712              		.loc 1 531 5 is_stmt 1 view .LVU236
 713              		.loc 1 531 8 is_stmt 0 view .LVU237
 714 01e0 1B68     		ldr	r3, [r3]
 715              		.loc 1 531 7 view .LVU238
 716 01e2 13F4807F 		tst	r3, #256
 717 01e6 18D0     		beq	.L101
 718              	.L53:
 532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 719              		.loc 1 549 5 is_stmt 1 view .LVU239
 720 01e8 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 721 01ea 1E4B     		ldr	r3, .L107
 722 01ec 83F87020 		strb	r2, [r3, #112]
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the LSE State */
 551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 723              		.loc 1 551 5 view .LVU240
 724              		.loc 1 551 26 is_stmt 0 view .LVU241
 725 01f0 A368     		ldr	r3, [r4, #8]
 726              		.loc 1 551 7 view .LVU242
 727 01f2 33B3     		cbz	r3, .L56
 552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 728              		.loc 1 554 7 is_stmt 1 view .LVU243
 729              		.loc 1 554 19 is_stmt 0 view .LVU244
 730 01f4 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccsp5bek.s 			page 43


 731              	.LVL55:
 732 01f8 0646     		mov	r6, r0
 733              	.LVL56:
 555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSE is ready */
 557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 734              		.loc 1 557 7 is_stmt 1 view .LVU245
 735              	.L57:
 736              		.loc 1 557 12 view .LVU246
 737              		.loc 1 557 13 is_stmt 0 view .LVU247
 738 01fa 1A4B     		ldr	r3, .L107
 739 01fc 1B6F     		ldr	r3, [r3, #112]
 740              		.loc 1 557 12 view .LVU248
 741 01fe 13F0020F 		tst	r3, #2
 742 0202 35D1     		bne	.L59
 558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 743              		.loc 1 559 9 is_stmt 1 view .LVU249
 744              		.loc 1 559 13 is_stmt 0 view .LVU250
 745 0204 FFF7FEFF 		bl	HAL_GetTick
 746              	.LVL57:
 747              		.loc 1 559 27 view .LVU251
 748 0208 801B     		subs	r0, r0, r6
 749              		.loc 1 559 11 view .LVU252
 750 020a 41F28833 		movw	r3, #5000
 751 020e 9842     		cmp	r0, r3
 752 0210 F3D9     		bls	.L57
 560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 753              		.loc 1 561 18 view .LVU253
 754 0212 0320     		movs	r0, #3
 755 0214 B9E0     		b	.L27
 756              	.LVL58:
 757              	.L79:
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 758              		.loc 1 515 22 view .LVU254
 759 0216 0025     		movs	r5, #0
 760 0218 DDE7     		b	.L52
 761              	.LVL59:
 762              	.L101:
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 763              		.loc 1 534 7 is_stmt 1 view .LVU255
 764 021a 144A     		ldr	r2, .L107+8
 765 021c 1368     		ldr	r3, [r2]
 766 021e 43F48073 		orr	r3, r3, #256
 767 0222 1360     		str	r3, [r2]
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 768              		.loc 1 537 7 view .LVU256
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 769              		.loc 1 537 19 is_stmt 0 view .LVU257
 770 0224 FFF7FEFF 		bl	HAL_GetTick
 771              	.LVL60:
 772 0228 0646     		mov	r6, r0
 773              	.LVL61:
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 774              		.loc 1 539 7 is_stmt 1 view .LVU258
 775              	.L54:
ARM GAS  /tmp/ccsp5bek.s 			page 44


 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 776              		.loc 1 539 12 view .LVU259
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 777              		.loc 1 539 13 is_stmt 0 view .LVU260
 778 022a 104B     		ldr	r3, .L107+8
 779 022c 1B68     		ldr	r3, [r3]
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 780              		.loc 1 539 12 view .LVU261
 781 022e 13F4807F 		tst	r3, #256
 782 0232 D9D1     		bne	.L53
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 783              		.loc 1 541 9 is_stmt 1 view .LVU262
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 784              		.loc 1 541 13 is_stmt 0 view .LVU263
 785 0234 FFF7FEFF 		bl	HAL_GetTick
 786              	.LVL62:
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 787              		.loc 1 541 27 view .LVU264
 788 0238 801B     		subs	r0, r0, r6
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 789              		.loc 1 541 11 view .LVU265
 790 023a 0228     		cmp	r0, #2
 791 023c F5D9     		bls	.L54
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 792              		.loc 1 543 18 view .LVU266
 793 023e 0320     		movs	r0, #3
 794 0240 A3E0     		b	.L27
 795              	.LVL63:
 796              	.L56:
 562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 797              		.loc 1 568 7 is_stmt 1 view .LVU267
 798              		.loc 1 568 19 is_stmt 0 view .LVU268
 799 0242 FFF7FEFF 		bl	HAL_GetTick
 800              	.LVL64:
 801 0246 0646     		mov	r6, r0
 802              	.LVL65:
 569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSE is ready */
 571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 803              		.loc 1 571 7 is_stmt 1 view .LVU269
 804              	.L60:
 805              		.loc 1 571 12 view .LVU270
 806              		.loc 1 571 13 is_stmt 0 view .LVU271
 807 0248 064B     		ldr	r3, .L107
 808 024a 1B6F     		ldr	r3, [r3, #112]
 809              		.loc 1 571 12 view .LVU272
 810 024c 13F0020F 		tst	r3, #2
 811 0250 0ED0     		beq	.L59
 572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 812              		.loc 1 573 9 is_stmt 1 view .LVU273
ARM GAS  /tmp/ccsp5bek.s 			page 45


 813              		.loc 1 573 13 is_stmt 0 view .LVU274
 814 0252 FFF7FEFF 		bl	HAL_GetTick
 815              	.LVL66:
 816              		.loc 1 573 27 view .LVU275
 817 0256 801B     		subs	r0, r0, r6
 818              		.loc 1 573 11 view .LVU276
 819 0258 41F28833 		movw	r3, #5000
 820 025c 9842     		cmp	r0, r3
 821 025e F3D9     		bls	.L60
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 822              		.loc 1 575 18 view .LVU277
 823 0260 0320     		movs	r0, #3
 824 0262 92E0     		b	.L27
 825              	.L108:
 826              		.align	2
 827              	.L107:
 828 0264 00380240 		.word	1073887232
 829 0268 00004742 		.word	1111949312
 830 026c 00700040 		.word	1073770496
 831              	.L59:
 576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 832              		.loc 1 581 5 is_stmt 1 view .LVU278
 833              		.loc 1 581 7 is_stmt 0 view .LVU279
 834 0270 EDB9     		cbnz	r5, .L102
 835              	.LVL67:
 836              	.L51:
 837              		.loc 1 581 7 view .LVU280
 838              	.LBE27:
 582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 839              		.loc 1 588 3 is_stmt 1 view .LVU281
 589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 840              		.loc 1 589 3 view .LVU282
 841              		.loc 1 589 30 is_stmt 0 view .LVU283
 842 0272 A369     		ldr	r3, [r4, #24]
 843              		.loc 1 589 6 view .LVU284
 844 0274 002B     		cmp	r3, #0
 845 0276 00F08780 		beq	.L83
 590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 846              		.loc 1 592 5 is_stmt 1 view .LVU285
 847              		.loc 1 592 8 is_stmt 0 view .LVU286
 848 027a 4B4A     		ldr	r2, .L109
 849 027c 9268     		ldr	r2, [r2, #8]
 850 027e 02F00C02 		and	r2, r2, #12
ARM GAS  /tmp/ccsp5bek.s 			page 46


 851              		.loc 1 592 7 view .LVU287
 852 0282 082A     		cmp	r2, #8
 853 0284 5BD0     		beq	.L62
 593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 854              		.loc 1 594 7 is_stmt 1 view .LVU288
 855              		.loc 1 594 9 is_stmt 0 view .LVU289
 856 0286 022B     		cmp	r3, #2
 857 0288 17D0     		beq	.L103
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Check the parameters */
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Disable the main PLL. */
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till PLL is ready */
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ);
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Enable the main PLL. */
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till PLL is ready */
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Disable the main PLL. */
ARM GAS  /tmp/ccsp5bek.s 			page 47


 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 858              		.loc 1 643 9 is_stmt 1 view .LVU290
 859 028a 484B     		ldr	r3, .L109+4
 860 028c 0022     		movs	r2, #0
 861 028e 1A66     		str	r2, [r3, #96]
 644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 862              		.loc 1 646 9 view .LVU291
 863              		.loc 1 646 21 is_stmt 0 view .LVU292
 864 0290 FFF7FEFF 		bl	HAL_GetTick
 865              	.LVL68:
 866 0294 0446     		mov	r4, r0
 867              	.LVL69:
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till PLL is ready */
 649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 868              		.loc 1 649 9 is_stmt 1 view .LVU293
 869              	.L68:
 870              		.loc 1 649 14 view .LVU294
 871              		.loc 1 649 15 is_stmt 0 view .LVU295
 872 0296 444B     		ldr	r3, .L109
 873 0298 1B68     		ldr	r3, [r3]
 874              		.loc 1 649 14 view .LVU296
 875 029a 13F0007F 		tst	r3, #33554432
 876 029e 4CD0     		beq	.L104
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 877              		.loc 1 651 11 is_stmt 1 view .LVU297
 878              		.loc 1 651 15 is_stmt 0 view .LVU298
 879 02a0 FFF7FEFF 		bl	HAL_GetTick
 880              	.LVL70:
 881              		.loc 1 651 29 view .LVU299
 882 02a4 001B     		subs	r0, r0, r4
 883              		.loc 1 651 13 view .LVU300
 884 02a6 6428     		cmp	r0, #100
 885 02a8 F5D9     		bls	.L68
 652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 886              		.loc 1 653 20 view .LVU301
 887 02aa 0320     		movs	r0, #3
 888 02ac 6DE0     		b	.L27
 889              	.LVL71:
 890              	.L102:
 891              	.LBB29:
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 892              		.loc 1 583 7 is_stmt 1 view .LVU302
 893 02ae 3E4A     		ldr	r2, .L109
 894 02b0 136C     		ldr	r3, [r2, #64]
 895 02b2 23F08053 		bic	r3, r3, #268435456
 896 02b6 1364     		str	r3, [r2, #64]
 897 02b8 DBE7     		b	.L51
 898              	.LVL72:
 899              	.L103:
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 900              		.loc 1 583 7 is_stmt 0 view .LVU303
 901              	.LBE29:
ARM GAS  /tmp/ccsp5bek.s 			page 48


 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 902              		.loc 1 597 9 is_stmt 1 view .LVU304
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 903              		.loc 1 598 9 view .LVU305
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 904              		.loc 1 599 9 view .LVU306
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 905              		.loc 1 600 9 view .LVU307
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 906              		.loc 1 601 9 view .LVU308
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 907              		.loc 1 604 9 view .LVU309
 908 02ba 3C4B     		ldr	r3, .L109+4
 909 02bc 0022     		movs	r2, #0
 910 02be 1A66     		str	r2, [r3, #96]
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 911              		.loc 1 607 9 view .LVU310
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 912              		.loc 1 607 21 is_stmt 0 view .LVU311
 913 02c0 FFF7FEFF 		bl	HAL_GetTick
 914              	.LVL73:
 915 02c4 0546     		mov	r5, r0
 916              	.LVL74:
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 917              		.loc 1 610 9 is_stmt 1 view .LVU312
 918              	.L64:
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 919              		.loc 1 610 14 view .LVU313
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 920              		.loc 1 610 15 is_stmt 0 view .LVU314
 921 02c6 384B     		ldr	r3, .L109
 922 02c8 1B68     		ldr	r3, [r3]
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 923              		.loc 1 610 14 view .LVU315
 924 02ca 13F0007F 		tst	r3, #33554432
 925 02ce 06D0     		beq	.L105
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 926              		.loc 1 612 11 is_stmt 1 view .LVU316
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 927              		.loc 1 612 15 is_stmt 0 view .LVU317
 928 02d0 FFF7FEFF 		bl	HAL_GetTick
 929              	.LVL75:
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 930              		.loc 1 612 29 view .LVU318
 931 02d4 401B     		subs	r0, r0, r5
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 932              		.loc 1 612 13 view .LVU319
 933 02d6 6428     		cmp	r0, #100
 934 02d8 F5D9     		bls	.L64
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 935              		.loc 1 614 20 view .LVU320
 936 02da 0320     		movs	r0, #3
 937 02dc 55E0     		b	.L27
 938              	.L105:
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 939              		.loc 1 619 9 is_stmt 1 view .LVU321
 940 02de 3248     		ldr	r0, .L109
ARM GAS  /tmp/ccsp5bek.s 			page 49


 941 02e0 4268     		ldr	r2, [r0, #4]
 942 02e2 22F07462 		bic	r2, r2, #255852544
 943 02e6 22F45F32 		bic	r2, r2, #228352
 944 02ea 22F47F72 		bic	r2, r2, #1020
 945 02ee 22F00302 		bic	r2, r2, #3
 946 02f2 E369     		ldr	r3, [r4, #28]
 947 02f4 216A     		ldr	r1, [r4, #32]
 948 02f6 0B43     		orrs	r3, r3, r1
 949 02f8 616A     		ldr	r1, [r4, #36]
 950 02fa 43EA8113 		orr	r3, r3, r1, lsl #6
 951 02fe E16A     		ldr	r1, [r4, #44]
 952 0300 43EA0163 		orr	r3, r3, r1, lsl #24
 953 0304 A16A     		ldr	r1, [r4, #40]
 954 0306 4908     		lsrs	r1, r1, #1
 955 0308 0139     		subs	r1, r1, #1
 956 030a 43EA0143 		orr	r3, r3, r1, lsl #16
 957 030e 1343     		orrs	r3, r3, r2
 958 0310 4360     		str	r3, [r0, #4]
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 959              		.loc 1 626 9 view .LVU322
 960 0312 264B     		ldr	r3, .L109+4
 961 0314 0122     		movs	r2, #1
 962 0316 1A66     		str	r2, [r3, #96]
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 963              		.loc 1 629 9 view .LVU323
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 964              		.loc 1 629 21 is_stmt 0 view .LVU324
 965 0318 FFF7FEFF 		bl	HAL_GetTick
 966              	.LVL76:
 967 031c 0446     		mov	r4, r0
 968              	.LVL77:
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 969              		.loc 1 632 9 is_stmt 1 view .LVU325
 970              	.L66:
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 971              		.loc 1 632 14 view .LVU326
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 972              		.loc 1 632 15 is_stmt 0 view .LVU327
 973 031e 224B     		ldr	r3, .L109
 974 0320 1B68     		ldr	r3, [r3]
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 975              		.loc 1 632 14 view .LVU328
 976 0322 13F0007F 		tst	r3, #33554432
 977 0326 06D1     		bne	.L106
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 978              		.loc 1 634 11 is_stmt 1 view .LVU329
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 979              		.loc 1 634 15 is_stmt 0 view .LVU330
 980 0328 FFF7FEFF 		bl	HAL_GetTick
 981              	.LVL78:
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 982              		.loc 1 634 29 view .LVU331
 983 032c 001B     		subs	r0, r0, r4
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 984              		.loc 1 634 13 view .LVU332
 985 032e 6428     		cmp	r0, #100
 986 0330 F5D9     		bls	.L66
ARM GAS  /tmp/ccsp5bek.s 			page 50


 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 987              		.loc 1 636 20 view .LVU333
 988 0332 0320     		movs	r0, #3
 989 0334 29E0     		b	.L27
 990              	.L106:
 654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         uint32_t pllcfgr = RCC->PLLCFGR;
 669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_ERROR;
 677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return HAL_OK;
 991              		.loc 1 681 10 view .LVU334
 992 0336 0020     		movs	r0, #0
 993 0338 27E0     		b	.L27
 994              	.L104:
 995              		.loc 1 681 10 view .LVU335
 996 033a 0020     		movs	r0, #0
 997 033c 25E0     		b	.L27
 998              	.LVL79:
 999              	.L62:
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1000              		.loc 1 661 7 is_stmt 1 view .LVU336
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1001              		.loc 1 661 9 is_stmt 0 view .LVU337
 1002 033e 012B     		cmp	r3, #1
 1003 0340 25D0     		beq	.L87
 1004              	.LBB30:
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       
 1005              		.loc 1 668 9 is_stmt 1 view .LVU338
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       
 1006              		.loc 1 668 18 is_stmt 0 view .LVU339
 1007 0342 194B     		ldr	r3, .L109
 1008 0344 5B68     		ldr	r3, [r3, #4]
 1009              	.LVL80:
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
ARM GAS  /tmp/ccsp5bek.s 			page 51


 1010              		.loc 1 670 9 is_stmt 1 view .LVU340
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1011              		.loc 1 670 13 is_stmt 0 view .LVU341
 1012 0346 03F48001 		and	r1, r3, #4194304
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1013              		.loc 1 670 76 view .LVU342
 1014 034a E269     		ldr	r2, [r4, #28]
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1015              		.loc 1 670 11 view .LVU343
 1016 034c 9142     		cmp	r1, r2
 1017 034e 20D1     		bne	.L88
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 1018              		.loc 1 671 13 discriminator 1 view .LVU344
 1019 0350 03F03F02 		and	r2, r3, #63
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 1020              		.loc 1 671 74 discriminator 1 view .LVU345
 1021 0354 216A     		ldr	r1, [r4, #32]
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1022              		.loc 1 670 88 discriminator 1 view .LVU346
 1023 0356 8A42     		cmp	r2, r1
 1024 0358 1DD1     		bne	.L89
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1025              		.loc 1 672 50 view .LVU347
 1026 035a C3F38812 		ubfx	r2, r3, #6, #9
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1027              		.loc 1 672 100 view .LVU348
 1028 035e 616A     		ldr	r1, [r4, #36]
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 1029              		.loc 1 671 81 view .LVU349
 1030 0360 8A42     		cmp	r2, r1
 1031 0362 1AD1     		bne	.L90
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1032              		.loc 1 673 13 view .LVU350
 1033 0364 03F44032 		and	r2, r3, #196608
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1034              		.loc 1 673 74 view .LVU351
 1035 0368 A16A     		ldr	r1, [r4, #40]
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1036              		.loc 1 672 107 view .LVU352
 1037 036a 8A42     		cmp	r2, r1
 1038 036c 17D1     		bne	.L91
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 1039              		.loc 1 674 13 view .LVU353
 1040 036e 03F07063 		and	r3, r3, #251658240
 1041              	.LVL81:
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 1042              		.loc 1 674 74 view .LVU354
 1043 0372 E26A     		ldr	r2, [r4, #44]
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1044              		.loc 1 673 81 view .LVU355
 1045 0374 9342     		cmp	r3, r2
 1046 0376 14D1     		bne	.L92
 1047              	.LBE30:
 1048              		.loc 1 681 10 view .LVU356
 1049 0378 0020     		movs	r0, #0
 1050 037a 06E0     		b	.L27
 1051              	.LVL82:
ARM GAS  /tmp/ccsp5bek.s 			page 52


 1052              	.L70:
 1053              	.LCFI3:
 1054              		.cfi_def_cfa_offset 0
 1055              		.cfi_restore 4
 1056              		.cfi_restore 5
 1057              		.cfi_restore 6
 1058              		.cfi_restore 14
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1059              		.loc 1 350 12 view .LVU357
 1060 037c 0120     		movs	r0, #1
 1061              	.LVL83:
 682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1062              		.loc 1 682 1 view .LVU358
 1063 037e 7047     		bx	lr
 1064              	.LVL84:
 1065              	.L98:
 1066              	.LCFI4:
 1067              		.cfi_def_cfa_offset 24
 1068              		.cfi_offset 4, -16
 1069              		.cfi_offset 5, -12
 1070              		.cfi_offset 6, -8
 1071              		.cfi_offset 14, -4
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1072              		.loc 1 366 16 view .LVU359
 1073 0380 0120     		movs	r0, #1
 1074              	.LVL85:
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1075              		.loc 1 366 16 view .LVU360
 1076 0382 02E0     		b	.L27
 1077              	.L74:
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1078              		.loc 1 419 16 view .LVU361
 1079 0384 0120     		movs	r0, #1
 1080 0386 00E0     		b	.L27
 1081              	.L83:
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1082              		.loc 1 681 10 view .LVU362
 1083 0388 0020     		movs	r0, #0
 1084              	.LVL86:
 1085              	.L27:
 1086              		.loc 1 682 1 view .LVU363
 1087 038a 02B0     		add	sp, sp, #8
 1088              	.LCFI5:
 1089              		.cfi_remember_state
 1090              		.cfi_def_cfa_offset 16
 1091              		@ sp needed
 1092 038c 70BD     		pop	{r4, r5, r6, pc}
 1093              	.LVL87:
 1094              	.L87:
 1095              	.LCFI6:
 1096              		.cfi_restore_state
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1097              		.loc 1 663 16 view .LVU364
 1098 038e 0120     		movs	r0, #1
 1099 0390 FBE7     		b	.L27
 1100              	.LVL88:
 1101              	.L88:
ARM GAS  /tmp/ccsp5bek.s 			page 53


 1102              	.LBB31:
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 1103              		.loc 1 676 18 view .LVU365
 1104 0392 0120     		movs	r0, #1
 1105 0394 F9E7     		b	.L27
 1106              	.L89:
 1107 0396 0120     		movs	r0, #1
 1108 0398 F7E7     		b	.L27
 1109              	.L90:
 1110 039a 0120     		movs	r0, #1
 1111 039c F5E7     		b	.L27
 1112              	.L91:
 1113 039e 0120     		movs	r0, #1
 1114 03a0 F3E7     		b	.L27
 1115              	.LVL89:
 1116              	.L92:
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 1117              		.loc 1 676 18 view .LVU366
 1118 03a2 0120     		movs	r0, #1
 1119 03a4 F1E7     		b	.L27
 1120              	.L110:
 1121 03a6 00BF     		.align	2
 1122              	.L109:
 1123 03a8 00380240 		.word	1073887232
 1124 03ac 00004742 		.word	1111949312
 1125              	.LBE31:
 1126              		.cfi_endproc
 1127              	.LFE73:
 1129              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1130              		.align	1
 1131              		.global	HAL_RCC_MCOConfig
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu softvfp
 1137              	HAL_RCC_MCOConfig:
 1138              	.LVL90:
 1139              	.LFB75:
 683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 684:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 686:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 689:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 690:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 693:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 694:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 695:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 697:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 698:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 700:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 701:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
ARM GAS  /tmp/ccsp5bek.s 			page 54


 702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 703:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 705:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 707:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 709:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 713:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check Null pointer */
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_ERROR;
 717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 722:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 723:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****      must be correctly programmed according to the frequency of the CPU clock
 725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****      (HCLK) and the supply voltage of the device. */
 726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        memory by reading the FLASH_ACR register */
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_ERROR;
 738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 744:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 747:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 749:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3U));
 754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 755:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 756:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
ARM GAS  /tmp/ccsp5bek.s 			page 55


 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 766:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 769:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSE ready flag */
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 771:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 775:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 777:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 778:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the PLL ready flag */
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 780:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 782:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 784:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 785:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSI ready flag */
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Get Start Tick */
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 802:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_TIMEOUT;
 804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 813:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 814:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        memory by reading the FLASH_ACR register */
ARM GAS  /tmp/ccsp5bek.s 			page 56


 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 817:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_ERROR;
 819:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 820:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 821:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 822:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 824:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 827:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSITI
 838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return HAL_OK;
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @}
 847:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 848:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 851:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *
 852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @verbatim
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 856:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
 857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 858:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     frequencies.
 859:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @endverbatim
 861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
 862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 864:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 865:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 866:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 867:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 868:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 869:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 870:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 871:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccsp5bek.s 			page 57


 873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 875:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 877:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source
 879:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 891:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1140              		.loc 1 891 1 is_stmt 1 view -0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 32
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              		.loc 1 891 1 is_stmt 0 view .LVU368
 1145 0000 70B5     		push	{r4, r5, r6, lr}
 1146              	.LCFI7:
 1147              		.cfi_def_cfa_offset 16
 1148              		.cfi_offset 4, -16
 1149              		.cfi_offset 5, -12
 1150              		.cfi_offset 6, -8
 1151              		.cfi_offset 14, -4
 1152 0002 88B0     		sub	sp, sp, #32
 1153              	.LCFI8:
 1154              		.cfi_def_cfa_offset 48
 1155 0004 0C46     		mov	r4, r1
 1156 0006 1546     		mov	r5, r2
 892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 1157              		.loc 1 892 3 is_stmt 1 view .LVU369
 893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1158              		.loc 1 894 3 view .LVU370
 895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1159              		.loc 1 895 3 view .LVU371
 896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* RCC_MCO1 */
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1160              		.loc 1 897 3 view .LVU372
 1161              		.loc 1 897 5 is_stmt 0 view .LVU373
 1162 0008 00BB     		cbnz	r0, .L112
 898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1163              		.loc 1 899 5 is_stmt 1 view .LVU374
 900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 901:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1164              		.loc 1 902 5 view .LVU375
 1165              	.LBB32:
 1166              		.loc 1 902 5 view .LVU376
ARM GAS  /tmp/ccsp5bek.s 			page 58


 1167 000a 0023     		movs	r3, #0
 1168 000c 0193     		str	r3, [sp, #4]
 1169              		.loc 1 902 5 view .LVU377
 1170 000e 204E     		ldr	r6, .L115
 1171 0010 326B     		ldr	r2, [r6, #48]
 1172              	.LVL91:
 1173              		.loc 1 902 5 is_stmt 0 view .LVU378
 1174 0012 42F00102 		orr	r2, r2, #1
 1175 0016 3263     		str	r2, [r6, #48]
 1176              		.loc 1 902 5 is_stmt 1 view .LVU379
 1177 0018 326B     		ldr	r2, [r6, #48]
 1178 001a 02F00102 		and	r2, r2, #1
 1179 001e 0192     		str	r2, [sp, #4]
 1180              		.loc 1 902 5 view .LVU380
 1181 0020 019A     		ldr	r2, [sp, #4]
 1182              	.LBE32:
 1183              		.loc 1 902 5 view .LVU381
 903:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 904:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1184              		.loc 1 905 5 view .LVU382
 1185              		.loc 1 905 25 is_stmt 0 view .LVU383
 1186 0022 4FF48072 		mov	r2, #256
 1187 0026 0392     		str	r2, [sp, #12]
 906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1188              		.loc 1 906 5 is_stmt 1 view .LVU384
 1189              		.loc 1 906 26 is_stmt 0 view .LVU385
 1190 0028 0222     		movs	r2, #2
 1191 002a 0492     		str	r2, [sp, #16]
 907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1192              		.loc 1 907 5 is_stmt 1 view .LVU386
 1193              		.loc 1 907 27 is_stmt 0 view .LVU387
 1194 002c 0322     		movs	r2, #3
 1195 002e 0692     		str	r2, [sp, #24]
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1196              		.loc 1 908 5 is_stmt 1 view .LVU388
 1197              		.loc 1 908 26 is_stmt 0 view .LVU389
 1198 0030 0593     		str	r3, [sp, #20]
 909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1199              		.loc 1 909 5 is_stmt 1 view .LVU390
 1200              		.loc 1 909 31 is_stmt 0 view .LVU391
 1201 0032 0793     		str	r3, [sp, #28]
 910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1202              		.loc 1 910 5 is_stmt 1 view .LVU392
 1203 0034 03A9     		add	r1, sp, #12
 1204              	.LVL92:
 1205              		.loc 1 910 5 is_stmt 0 view .LVU393
 1206 0036 1748     		ldr	r0, .L115+4
 1207              	.LVL93:
 1208              		.loc 1 910 5 view .LVU394
 1209 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 1210              	.LVL94:
 911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1211              		.loc 1 913 5 is_stmt 1 view .LVU395
 1212 003c B368     		ldr	r3, [r6, #8]
ARM GAS  /tmp/ccsp5bek.s 			page 59


 1213 003e 23F0EC63 		bic	r3, r3, #123731968
 1214 0042 2543     		orrs	r5, r5, r4
 1215              	.LVL95:
 1216              		.loc 1 913 5 is_stmt 0 view .LVU396
 1217 0044 1D43     		orrs	r5, r5, r3
 1218 0046 B560     		str	r5, [r6, #8]
 1219              	.LVL96:
 1220              	.L111:
 914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
 916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 918:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1221              		.loc 1 933 1 view .LVU397
 1222 0048 08B0     		add	sp, sp, #32
 1223              	.LCFI9:
 1224              		.cfi_remember_state
 1225              		.cfi_def_cfa_offset 16
 1226              		@ sp needed
 1227 004a 70BD     		pop	{r4, r5, r6, pc}
 1228              	.LVL97:
 1229              	.L112:
 1230              	.LCFI10:
 1231              		.cfi_restore_state
 917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1232              		.loc 1 917 5 is_stmt 1 view .LVU398
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1233              		.loc 1 920 5 view .LVU399
 1234              	.LBB33:
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1235              		.loc 1 920 5 view .LVU400
 1236 004c 0023     		movs	r3, #0
 1237 004e 0293     		str	r3, [sp, #8]
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1238              		.loc 1 920 5 view .LVU401
 1239 0050 0F4E     		ldr	r6, .L115
 1240 0052 326B     		ldr	r2, [r6, #48]
 1241              	.LVL98:
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1242              		.loc 1 920 5 is_stmt 0 view .LVU402
 1243 0054 42F00402 		orr	r2, r2, #4
 1244 0058 3263     		str	r2, [r6, #48]
ARM GAS  /tmp/ccsp5bek.s 			page 60


 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1245              		.loc 1 920 5 is_stmt 1 view .LVU403
 1246 005a 326B     		ldr	r2, [r6, #48]
 1247 005c 02F00402 		and	r2, r2, #4
 1248 0060 0292     		str	r2, [sp, #8]
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1249              		.loc 1 920 5 view .LVU404
 1250 0062 029A     		ldr	r2, [sp, #8]
 1251              	.LBE33:
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1252              		.loc 1 920 5 view .LVU405
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1253              		.loc 1 923 5 view .LVU406
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1254              		.loc 1 923 25 is_stmt 0 view .LVU407
 1255 0064 4FF40072 		mov	r2, #512
 1256 0068 0392     		str	r2, [sp, #12]
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1257              		.loc 1 924 5 is_stmt 1 view .LVU408
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1258              		.loc 1 924 26 is_stmt 0 view .LVU409
 1259 006a 0222     		movs	r2, #2
 1260 006c 0492     		str	r2, [sp, #16]
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1261              		.loc 1 925 5 is_stmt 1 view .LVU410
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1262              		.loc 1 925 27 is_stmt 0 view .LVU411
 1263 006e 0322     		movs	r2, #3
 1264 0070 0692     		str	r2, [sp, #24]
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1265              		.loc 1 926 5 is_stmt 1 view .LVU412
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1266              		.loc 1 926 26 is_stmt 0 view .LVU413
 1267 0072 0593     		str	r3, [sp, #20]
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1268              		.loc 1 927 5 is_stmt 1 view .LVU414
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1269              		.loc 1 927 31 is_stmt 0 view .LVU415
 1270 0074 0793     		str	r3, [sp, #28]
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1271              		.loc 1 928 5 is_stmt 1 view .LVU416
 1272 0076 03A9     		add	r1, sp, #12
 1273              	.LVL99:
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1274              		.loc 1 928 5 is_stmt 0 view .LVU417
 1275 0078 0748     		ldr	r0, .L115+8
 1276              	.LVL100:
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1277              		.loc 1 928 5 view .LVU418
 1278 007a FFF7FEFF 		bl	HAL_GPIO_Init
 1279              	.LVL101:
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1280              		.loc 1 931 5 is_stmt 1 view .LVU419
 1281 007e B368     		ldr	r3, [r6, #8]
 1282 0080 23F07843 		bic	r3, r3, #-134217728
 1283 0084 44EAC504 		orr	r4, r4, r5, lsl #3
 1284              	.LVL102:
ARM GAS  /tmp/ccsp5bek.s 			page 61


 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1285              		.loc 1 931 5 is_stmt 0 view .LVU420
 1286 0088 1C43     		orrs	r4, r4, r3
 1287 008a B460     		str	r4, [r6, #8]
 1288              		.loc 1 933 1 view .LVU421
 1289 008c DCE7     		b	.L111
 1290              	.L116:
 1291 008e 00BF     		.align	2
 1292              	.L115:
 1293 0090 00380240 		.word	1073887232
 1294 0094 00000240 		.word	1073872896
 1295 0098 00080240 		.word	1073874944
 1296              		.cfi_endproc
 1297              	.LFE75:
 1299              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1300              		.align	1
 1301              		.global	HAL_RCC_EnableCSS
 1302              		.syntax unified
 1303              		.thumb
 1304              		.thumb_func
 1305              		.fpu softvfp
 1307              	HAL_RCC_EnableCSS:
 1308              	.LFB76:
 934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 940:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 941:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.
 942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 944:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1309              		.loc 1 945 1 is_stmt 1 view -0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1314              		.loc 1 946 3 view .LVU423
 1315              		.loc 1 946 38 is_stmt 0 view .LVU424
 1316 0000 014B     		ldr	r3, .L118
 1317 0002 0122     		movs	r2, #1
 1318 0004 DA64     		str	r2, [r3, #76]
 947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1319              		.loc 1 947 1 view .LVU425
 1320 0006 7047     		bx	lr
 1321              	.L119:
 1322              		.align	2
 1323              	.L118:
 1324 0008 00004742 		.word	1111949312
 1325              		.cfi_endproc
 1326              	.LFE76:
 1328              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1329              		.align	1
ARM GAS  /tmp/ccsp5bek.s 			page 62


 1330              		.global	HAL_RCC_DisableCSS
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1334              		.fpu softvfp
 1336              	HAL_RCC_DisableCSS:
 1337              	.LFB77:
 948:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 949:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 950:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 952:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1338              		.loc 1 954 1 is_stmt 1 view -0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              		@ link register save eliminated.
 955:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1343              		.loc 1 955 3 view .LVU427
 1344              		.loc 1 955 38 is_stmt 0 view .LVU428
 1345 0000 014B     		ldr	r3, .L121
 1346 0002 0022     		movs	r2, #0
 1347 0004 DA64     		str	r2, [r3, #76]
 956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1348              		.loc 1 956 1 view .LVU429
 1349 0006 7047     		bx	lr
 1350              	.L122:
 1351              		.align	2
 1352              	.L121:
 1353 0008 00004742 		.word	1111949312
 1354              		.cfi_endproc
 1355              	.LFE77:
 1357              		.global	__aeabi_uldivmod
 1358              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1359              		.align	1
 1360              		.global	HAL_RCC_GetSysClockFreq
 1361              		.syntax unified
 1362              		.thumb
 1363              		.thumb_func
 1364              		.fpu softvfp
 1366              	HAL_RCC_GetSysClockFreq:
 1367              	.LFB78:
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 959:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         constant and the selected clock source:
 964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f2xx_hal_conf.h file (default value
 969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
ARM GAS  /tmp/ccsp5bek.s 			page 63


 970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *               in voltage and temperature.
 971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f2xx_hal_conf.h file (default value
 972:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 974:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                have wrong result.
 975:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 977:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         value for HSE crystal.
 978:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 983:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 984:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 986:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval SYSCLK frequency
 987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 988:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1368              		.loc 1 989 1 is_stmt 1 view -0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372 0000 08B5     		push	{r3, lr}
 1373              	.LCFI11:
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 3, -8
 1376              		.cfi_offset 14, -4
 990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1377              		.loc 1 990 3 view .LVU431
 1378              	.LVL103:
 991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1379              		.loc 1 991 3 view .LVU432
 992:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1380              		.loc 1 994 3 view .LVU433
 1381              		.loc 1 994 14 is_stmt 0 view .LVU434
 1382 0002 314B     		ldr	r3, .L130
 1383 0004 9B68     		ldr	r3, [r3, #8]
 1384              		.loc 1 994 21 view .LVU435
 1385 0006 03F00C03 		and	r3, r3, #12
 1386              		.loc 1 994 3 view .LVU436
 1387 000a 042B     		cmp	r3, #4
 1388 000c 57D0     		beq	.L127
 1389 000e 082B     		cmp	r3, #8
 1390 0010 57D1     		bne	.L128
 995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        break;
1000:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
1003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
ARM GAS  /tmp/ccsp5bek.s 			page 64


1004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
1005:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1006:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
1007:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
1008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1009:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1391              		.loc 1 1010 7 is_stmt 1 view .LVU437
 1392              		.loc 1 1010 17 is_stmt 0 view .LVU438
 1393 0012 2D4B     		ldr	r3, .L130
 1394 0014 5A68     		ldr	r2, [r3, #4]
 1395              		.loc 1 1010 12 view .LVU439
 1396 0016 02F03F02 		and	r2, r2, #63
 1397              	.LVL104:
1011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1398              		.loc 1 1011 7 is_stmt 1 view .LVU440
 1399              		.loc 1 1011 10 is_stmt 0 view .LVU441
 1400 001a 5B68     		ldr	r3, [r3, #4]
 1401              		.loc 1 1011 9 view .LVU442
 1402 001c 13F4800F 		tst	r3, #4194304
 1403 0020 2AD0     		beq	.L125
1012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
1013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* HSE used as PLL clock source */
1014:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1404              		.loc 1 1014 9 is_stmt 1 view .LVU443
 1405              		.loc 1 1014 72 is_stmt 0 view .LVU444
 1406 0022 294B     		ldr	r3, .L130
 1407 0024 5968     		ldr	r1, [r3, #4]
 1408              		.loc 1 1014 56 view .LVU445
 1409 0026 C1F3881C 		ubfx	ip, r1, #6, #9
 1410              		.loc 1 1014 53 view .LVU446
 1411 002a 4FEA4C11 		lsl	r1, ip, #5
 1412 002e B1EB0C00 		subs	r0, r1, ip
 1413 0032 6EEB0E0E 		sbc	lr, lr, lr
 1414 0036 4FEA8E13 		lsl	r3, lr, #6
 1415 003a 43EA9063 		orr	r3, r3, r0, lsr #26
 1416 003e 8101     		lsls	r1, r0, #6
 1417 0040 091A     		subs	r1, r1, r0
 1418 0042 63EB0E03 		sbc	r3, r3, lr
 1419 0046 DB00     		lsls	r3, r3, #3
 1420 0048 43EA5173 		orr	r3, r3, r1, lsr #29
 1421 004c C900     		lsls	r1, r1, #3
 1422 004e 11EB0C0C 		adds	ip, r1, ip
 1423 0052 43F10003 		adc	r3, r3, #0
 1424 0056 5902     		lsls	r1, r3, #9
 1425              		.loc 1 1014 130 view .LVU447
 1426 0058 0023     		movs	r3, #0
 1427 005a 4FEA4C20 		lsl	r0, ip, #9
 1428 005e 41EADC51 		orr	r1, r1, ip, lsr #23
 1429 0062 FFF7FEFF 		bl	__aeabi_uldivmod
 1430              	.LVL105:
 1431              	.L126:
1015:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
1016:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
1017:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
1018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* HSI used as PLL clock source */
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
ARM GAS  /tmp/ccsp5bek.s 			page 65


1020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
1021:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1432              		.loc 1 1021 7 is_stmt 1 view .LVU448
 1433              		.loc 1 1021 21 is_stmt 0 view .LVU449
 1434 0066 184B     		ldr	r3, .L130
 1435 0068 5B68     		ldr	r3, [r3, #4]
 1436              		.loc 1 1021 51 view .LVU450
 1437 006a C3F30143 		ubfx	r3, r3, #16, #2
 1438              		.loc 1 1021 76 view .LVU451
 1439 006e 0133     		adds	r3, r3, #1
 1440              		.loc 1 1021 12 view .LVU452
 1441 0070 5B00     		lsls	r3, r3, #1
 1442              	.LVL106:
1022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1023:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1443              		.loc 1 1023 7 is_stmt 1 view .LVU453
 1444              		.loc 1 1023 20 is_stmt 0 view .LVU454
 1445 0072 B0FBF3F0 		udiv	r0, r0, r3
 1446              	.LVL107:
1024:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
 1447              		.loc 1 1024 7 is_stmt 1 view .LVU455
 1448 0076 25E0     		b	.L123
 1449              	.LVL108:
 1450              	.L125:
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1451              		.loc 1 1019 9 view .LVU456
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1452              		.loc 1 1019 72 is_stmt 0 view .LVU457
 1453 0078 134B     		ldr	r3, .L130
 1454 007a 5968     		ldr	r1, [r3, #4]
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1455              		.loc 1 1019 56 view .LVU458
 1456 007c C1F3881C 		ubfx	ip, r1, #6, #9
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1457              		.loc 1 1019 53 view .LVU459
 1458 0080 4FEA4C11 		lsl	r1, ip, #5
 1459 0084 B1EB0C00 		subs	r0, r1, ip
 1460 0088 6EEB0E0E 		sbc	lr, lr, lr
 1461 008c 4FEA8E13 		lsl	r3, lr, #6
 1462 0090 43EA9063 		orr	r3, r3, r0, lsr #26
 1463 0094 8101     		lsls	r1, r0, #6
 1464 0096 091A     		subs	r1, r1, r0
 1465 0098 63EB0E03 		sbc	r3, r3, lr
 1466 009c DB00     		lsls	r3, r3, #3
 1467 009e 43EA5173 		orr	r3, r3, r1, lsr #29
 1468 00a2 C900     		lsls	r1, r1, #3
 1469 00a4 11EB0C0C 		adds	ip, r1, ip
 1470 00a8 43F10003 		adc	r3, r3, #0
 1471 00ac 9902     		lsls	r1, r3, #10
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1472              		.loc 1 1019 130 view .LVU460
 1473 00ae 0023     		movs	r3, #0
 1474 00b0 4FEA8C20 		lsl	r0, ip, #10
 1475 00b4 41EA9C51 		orr	r1, r1, ip, lsr #22
 1476 00b8 FFF7FEFF 		bl	__aeabi_uldivmod
 1477              	.LVL109:
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccsp5bek.s 			page 66


 1478              		.loc 1 1019 130 view .LVU461
 1479 00bc D3E7     		b	.L126
 1480              	.LVL110:
 1481              	.L127:
1003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
 1482              		.loc 1 1003 20 view .LVU462
 1483 00be 0348     		ldr	r0, .L130+4
 1484 00c0 00E0     		b	.L123
 1485              	.L128:
 994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1486              		.loc 1 994 3 view .LVU463
 1487 00c2 0348     		ldr	r0, .L130+8
 1488              	.LVL111:
1025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1026:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     default:
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
1028:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1029:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
1030:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1031:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return sysclockfreq;
 1489              		.loc 1 1032 3 is_stmt 1 view .LVU464
 1490              	.L123:
1033:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1491              		.loc 1 1033 1 is_stmt 0 view .LVU465
 1492 00c4 08BD     		pop	{r3, pc}
 1493              	.L131:
 1494 00c6 00BF     		.align	2
 1495              	.L130:
 1496 00c8 00380240 		.word	1073887232
 1497 00cc 00127A00 		.word	8000000
 1498 00d0 0024F400 		.word	16000000
 1499              		.cfi_endproc
 1500              	.LFE78:
 1502              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1503              		.align	1
 1504              		.global	HAL_RCC_ClockConfig
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu softvfp
 1510              	HAL_RCC_ClockConfig:
 1511              	.LVL112:
 1512              	.LFB74:
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 1513              		.loc 1 710 1 is_stmt 1 view -0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 0
 1516              		@ frame_needed = 0, uses_anonymous_args = 0
 711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1517              		.loc 1 711 3 view .LVU467
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1518              		.loc 1 714 3 view .LVU468
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1519              		.loc 1 714 5 is_stmt 0 view .LVU469
 1520 0000 0028     		cmp	r0, #0
 1521 0002 00F0A080 		beq	.L147
ARM GAS  /tmp/ccsp5bek.s 			page 67


 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 1522              		.loc 1 710 1 view .LVU470
 1523 0006 70B5     		push	{r4, r5, r6, lr}
 1524              	.LCFI12:
 1525              		.cfi_def_cfa_offset 16
 1526              		.cfi_offset 4, -16
 1527              		.cfi_offset 5, -12
 1528              		.cfi_offset 6, -8
 1529              		.cfi_offset 14, -4
 1530 0008 0D46     		mov	r5, r1
 1531 000a 0446     		mov	r4, r0
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1532              		.loc 1 720 3 is_stmt 1 view .LVU471
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1533              		.loc 1 721 3 view .LVU472
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1534              		.loc 1 728 3 view .LVU473
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1535              		.loc 1 728 17 is_stmt 0 view .LVU474
 1536 000c 524B     		ldr	r3, .L160
 1537 000e 1B68     		ldr	r3, [r3]
 1538 0010 03F00F03 		and	r3, r3, #15
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1539              		.loc 1 728 5 view .LVU475
 1540 0014 8B42     		cmp	r3, r1
 1541 0016 08D2     		bcs	.L134
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1542              		.loc 1 731 5 is_stmt 1 view .LVU476
 1543 0018 CBB2     		uxtb	r3, r1
 1544 001a 4F4A     		ldr	r2, .L160
 1545 001c 1370     		strb	r3, [r2]
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1546              		.loc 1 735 5 view .LVU477
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1547              		.loc 1 735 8 is_stmt 0 view .LVU478
 1548 001e 1368     		ldr	r3, [r2]
 1549 0020 03F00F03 		and	r3, r3, #15
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1550              		.loc 1 735 7 view .LVU479
 1551 0024 8B42     		cmp	r3, r1
 1552 0026 40F09080 		bne	.L148
 1553              	.L134:
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1554              		.loc 1 742 3 is_stmt 1 view .LVU480
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1555              		.loc 1 742 25 is_stmt 0 view .LVU481
 1556 002a 2368     		ldr	r3, [r4]
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1557              		.loc 1 742 5 view .LVU482
 1558 002c 13F0020F 		tst	r3, #2
 1559 0030 17D0     		beq	.L135
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1560              		.loc 1 746 5 is_stmt 1 view .LVU483
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1561              		.loc 1 746 7 is_stmt 0 view .LVU484
 1562 0032 13F0040F 		tst	r3, #4
 1563 0036 04D0     		beq	.L136
ARM GAS  /tmp/ccsp5bek.s 			page 68


 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1564              		.loc 1 748 7 is_stmt 1 view .LVU485
 1565 0038 484A     		ldr	r2, .L160+4
 1566 003a 9368     		ldr	r3, [r2, #8]
 1567 003c 43F4E053 		orr	r3, r3, #7168
 1568 0040 9360     		str	r3, [r2, #8]
 1569              	.L136:
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1570              		.loc 1 751 5 view .LVU486
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1571              		.loc 1 751 27 is_stmt 0 view .LVU487
 1572 0042 2368     		ldr	r3, [r4]
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1573              		.loc 1 751 7 view .LVU488
 1574 0044 13F0080F 		tst	r3, #8
 1575 0048 04D0     		beq	.L137
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1576              		.loc 1 753 7 is_stmt 1 view .LVU489
 1577 004a 444A     		ldr	r2, .L160+4
 1578 004c 9368     		ldr	r3, [r2, #8]
 1579 004e 43F46043 		orr	r3, r3, #57344
 1580 0052 9360     		str	r3, [r2, #8]
 1581              	.L137:
 757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1582              		.loc 1 757 5 view .LVU490
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1583              		.loc 1 758 5 view .LVU491
 1584 0054 414A     		ldr	r2, .L160+4
 1585 0056 9368     		ldr	r3, [r2, #8]
 1586 0058 23F0F003 		bic	r3, r3, #240
 1587 005c A168     		ldr	r1, [r4, #8]
 1588              	.LVL113:
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1589              		.loc 1 758 5 is_stmt 0 view .LVU492
 1590 005e 0B43     		orrs	r3, r3, r1
 1591 0060 9360     		str	r3, [r2, #8]
 1592              	.L135:
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1593              		.loc 1 762 3 is_stmt 1 view .LVU493
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1594              		.loc 1 762 25 is_stmt 0 view .LVU494
 1595 0062 2368     		ldr	r3, [r4]
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1596              		.loc 1 762 5 view .LVU495
 1597 0064 13F0010F 		tst	r3, #1
 1598 0068 31D0     		beq	.L138
 764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1599              		.loc 1 764 5 is_stmt 1 view .LVU496
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1600              		.loc 1 767 5 view .LVU497
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1601              		.loc 1 767 25 is_stmt 0 view .LVU498
 1602 006a 6368     		ldr	r3, [r4, #4]
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1603              		.loc 1 767 7 view .LVU499
 1604 006c 012B     		cmp	r3, #1
 1605 006e 20D0     		beq	.L158
ARM GAS  /tmp/ccsp5bek.s 			page 69


 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1606              		.loc 1 776 10 is_stmt 1 view .LVU500
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1607              		.loc 1 776 12 is_stmt 0 view .LVU501
 1608 0070 022B     		cmp	r3, #2
 1609 0072 25D0     		beq	.L159
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1610              		.loc 1 788 7 is_stmt 1 view .LVU502
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1611              		.loc 1 788 10 is_stmt 0 view .LVU503
 1612 0074 394A     		ldr	r2, .L160+4
 1613 0076 1268     		ldr	r2, [r2]
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1614              		.loc 1 788 9 view .LVU504
 1615 0078 12F0020F 		tst	r2, #2
 1616 007c 67D0     		beq	.L151
 1617              	.L140:
 794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1618              		.loc 1 794 5 is_stmt 1 view .LVU505
 1619 007e 3749     		ldr	r1, .L160+4
 1620 0080 8A68     		ldr	r2, [r1, #8]
 1621 0082 22F00302 		bic	r2, r2, #3
 1622 0086 1343     		orrs	r3, r3, r2
 1623 0088 8B60     		str	r3, [r1, #8]
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1624              		.loc 1 797 5 view .LVU506
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1625              		.loc 1 797 17 is_stmt 0 view .LVU507
 1626 008a FFF7FEFF 		bl	HAL_GetTick
 1627              	.LVL114:
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1628              		.loc 1 797 17 view .LVU508
 1629 008e 0646     		mov	r6, r0
 1630              	.LVL115:
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1631              		.loc 1 799 5 is_stmt 1 view .LVU509
 1632              	.L142:
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1633              		.loc 1 799 11 view .LVU510
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1634              		.loc 1 799 12 is_stmt 0 view .LVU511
 1635 0090 324B     		ldr	r3, .L160+4
 1636 0092 9B68     		ldr	r3, [r3, #8]
 1637 0094 03F00C03 		and	r3, r3, #12
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1638              		.loc 1 799 63 view .LVU512
 1639 0098 6268     		ldr	r2, [r4, #4]
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1640              		.loc 1 799 11 view .LVU513
 1641 009a B3EB820F 		cmp	r3, r2, lsl #2
 1642 009e 16D0     		beq	.L138
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1643              		.loc 1 801 7 is_stmt 1 view .LVU514
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1644              		.loc 1 801 12 is_stmt 0 view .LVU515
 1645 00a0 FFF7FEFF 		bl	HAL_GetTick
 1646              	.LVL116:
ARM GAS  /tmp/ccsp5bek.s 			page 70


 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1647              		.loc 1 801 26 view .LVU516
 1648 00a4 801B     		subs	r0, r0, r6
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1649              		.loc 1 801 10 view .LVU517
 1650 00a6 41F28833 		movw	r3, #5000
 1651 00aa 9842     		cmp	r0, r3
 1652 00ac F0D9     		bls	.L142
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1653              		.loc 1 803 16 view .LVU518
 1654 00ae 0320     		movs	r0, #3
 1655 00b0 48E0     		b	.L133
 1656              	.LVL117:
 1657              	.L158:
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1658              		.loc 1 770 7 is_stmt 1 view .LVU519
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1659              		.loc 1 770 10 is_stmt 0 view .LVU520
 1660 00b2 2A4A     		ldr	r2, .L160+4
 1661 00b4 1268     		ldr	r2, [r2]
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1662              		.loc 1 770 9 view .LVU521
 1663 00b6 12F4003F 		tst	r2, #131072
 1664 00ba E0D1     		bne	.L140
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1665              		.loc 1 772 16 view .LVU522
 1666 00bc 0120     		movs	r0, #1
 1667              	.LVL118:
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1668              		.loc 1 772 16 view .LVU523
 1669 00be 41E0     		b	.L133
 1670              	.LVL119:
 1671              	.L159:
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1672              		.loc 1 779 7 is_stmt 1 view .LVU524
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1673              		.loc 1 779 10 is_stmt 0 view .LVU525
 1674 00c0 264A     		ldr	r2, .L160+4
 1675 00c2 1268     		ldr	r2, [r2]
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1676              		.loc 1 779 9 view .LVU526
 1677 00c4 12F0007F 		tst	r2, #33554432
 1678 00c8 D9D1     		bne	.L140
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1679              		.loc 1 781 16 view .LVU527
 1680 00ca 0120     		movs	r0, #1
 1681              	.LVL120:
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1682              		.loc 1 781 16 view .LVU528
 1683 00cc 3AE0     		b	.L133
 1684              	.L138:
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1685              		.loc 1 809 3 is_stmt 1 view .LVU529
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1686              		.loc 1 809 17 is_stmt 0 view .LVU530
 1687 00ce 224B     		ldr	r3, .L160
 1688 00d0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccsp5bek.s 			page 71


 1689 00d2 03F00F03 		and	r3, r3, #15
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1690              		.loc 1 809 5 view .LVU531
 1691 00d6 AB42     		cmp	r3, r5
 1692 00d8 07D9     		bls	.L144
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1693              		.loc 1 812 5 is_stmt 1 view .LVU532
 1694 00da EAB2     		uxtb	r2, r5
 1695 00dc 1E4B     		ldr	r3, .L160
 1696 00de 1A70     		strb	r2, [r3]
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1697              		.loc 1 816 5 view .LVU533
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1698              		.loc 1 816 8 is_stmt 0 view .LVU534
 1699 00e0 1B68     		ldr	r3, [r3]
 1700 00e2 03F00F03 		and	r3, r3, #15
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1701              		.loc 1 816 7 view .LVU535
 1702 00e6 AB42     		cmp	r3, r5
 1703 00e8 33D1     		bne	.L153
 1704              	.L144:
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1705              		.loc 1 823 3 is_stmt 1 view .LVU536
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1706              		.loc 1 823 25 is_stmt 0 view .LVU537
 1707 00ea 2368     		ldr	r3, [r4]
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1708              		.loc 1 823 5 view .LVU538
 1709 00ec 13F0040F 		tst	r3, #4
 1710 00f0 06D0     		beq	.L145
 825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1711              		.loc 1 825 5 is_stmt 1 view .LVU539
 826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1712              		.loc 1 826 5 view .LVU540
 1713 00f2 1A4A     		ldr	r2, .L160+4
 1714 00f4 9368     		ldr	r3, [r2, #8]
 1715 00f6 23F4E053 		bic	r3, r3, #7168
 1716 00fa E168     		ldr	r1, [r4, #12]
 1717 00fc 0B43     		orrs	r3, r3, r1
 1718 00fe 9360     		str	r3, [r2, #8]
 1719              	.L145:
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1720              		.loc 1 830 3 view .LVU541
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1721              		.loc 1 830 25 is_stmt 0 view .LVU542
 1722 0100 2368     		ldr	r3, [r4]
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1723              		.loc 1 830 5 view .LVU543
 1724 0102 13F0080F 		tst	r3, #8
 1725 0106 07D0     		beq	.L146
 832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1726              		.loc 1 832 5 is_stmt 1 view .LVU544
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1727              		.loc 1 833 5 view .LVU545
 1728 0108 144A     		ldr	r2, .L160+4
 1729 010a 9368     		ldr	r3, [r2, #8]
 1730 010c 23F46043 		bic	r3, r3, #57344
ARM GAS  /tmp/ccsp5bek.s 			page 72


 1731 0110 2169     		ldr	r1, [r4, #16]
 1732 0112 43EAC103 		orr	r3, r3, r1, lsl #3
 1733 0116 9360     		str	r3, [r2, #8]
 1734              	.L146:
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1735              		.loc 1 837 3 view .LVU546
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1736              		.loc 1 837 21 is_stmt 0 view .LVU547
 1737 0118 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1738              	.LVL121:
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1739              		.loc 1 837 68 view .LVU548
 1740 011c 0F4B     		ldr	r3, .L160+4
 1741 011e 9B68     		ldr	r3, [r3, #8]
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1742              		.loc 1 837 75 view .LVU549
 1743 0120 03F0F003 		and	r3, r3, #240
 1744              	.LVL122:
 1745              	.LBB34:
 1746              	.LBI34:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1747              		.loc 2 981 31 is_stmt 1 view .LVU550
 1748              	.LBB35:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1749              		.loc 2 983 3 view .LVU551
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1750              		.loc 2 988 4 view .LVU552
 1751 0124 F022     		movs	r2, #240
 1752              		.syntax unified
 1753              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1754 0126 92FAA2F2 		rbit r2, r2
 1755              	@ 0 "" 2
 1756              	.LVL123:
 1757              		.loc 2 1001 3 view .LVU553
 1758              		.loc 2 1001 3 is_stmt 0 view .LVU554
 1759              		.thumb
 1760              		.syntax unified
 1761              	.LBE35:
 1762              	.LBE34:
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1763              		.loc 1 837 91 view .LVU555
 1764 012a B2FA82F2 		clz	r2, r2
 1765 012e D340     		lsrs	r3, r3, r2
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1766              		.loc 1 837 63 view .LVU556
 1767 0130 0B4A     		ldr	r2, .L160+8
 1768 0132 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1769              		.loc 1 837 47 view .LVU557
 1770 0134 D840     		lsrs	r0, r0, r3
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1771              		.loc 1 837 19 view .LVU558
 1772 0136 0B4B     		ldr	r3, .L160+12
 1773 0138 1860     		str	r0, [r3]
 840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1774              		.loc 1 840 3 is_stmt 1 view .LVU559
 1775 013a 0B4B     		ldr	r3, .L160+16
ARM GAS  /tmp/ccsp5bek.s 			page 73


 1776 013c 1868     		ldr	r0, [r3]
 1777 013e FFF7FEFF 		bl	HAL_InitTick
 1778              	.LVL124:
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1779              		.loc 1 842 3 view .LVU560
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1780              		.loc 1 842 10 is_stmt 0 view .LVU561
 1781 0142 0020     		movs	r0, #0
 1782              	.L133:
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1783              		.loc 1 843 1 view .LVU562
 1784 0144 70BD     		pop	{r4, r5, r6, pc}
 1785              	.LVL125:
 1786              	.L147:
 1787              	.LCFI13:
 1788              		.cfi_def_cfa_offset 0
 1789              		.cfi_restore 4
 1790              		.cfi_restore 5
 1791              		.cfi_restore 6
 1792              		.cfi_restore 14
 716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1793              		.loc 1 716 12 view .LVU563
 1794 0146 0120     		movs	r0, #1
 1795              	.LVL126:
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1796              		.loc 1 843 1 view .LVU564
 1797 0148 7047     		bx	lr
 1798              	.LVL127:
 1799              	.L148:
 1800              	.LCFI14:
 1801              		.cfi_def_cfa_offset 16
 1802              		.cfi_offset 4, -16
 1803              		.cfi_offset 5, -12
 1804              		.cfi_offset 6, -8
 1805              		.cfi_offset 14, -4
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1806              		.loc 1 737 14 view .LVU565
 1807 014a 0120     		movs	r0, #1
 1808              	.LVL128:
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1809              		.loc 1 737 14 view .LVU566
 1810 014c FAE7     		b	.L133
 1811              	.LVL129:
 1812              	.L151:
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1813              		.loc 1 790 16 view .LVU567
 1814 014e 0120     		movs	r0, #1
 1815              	.LVL130:
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1816              		.loc 1 790 16 view .LVU568
 1817 0150 F8E7     		b	.L133
 1818              	.L153:
 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1819              		.loc 1 818 14 view .LVU569
 1820 0152 0120     		movs	r0, #1
 1821 0154 F6E7     		b	.L133
 1822              	.L161:
ARM GAS  /tmp/ccsp5bek.s 			page 74


 1823 0156 00BF     		.align	2
 1824              	.L160:
 1825 0158 003C0240 		.word	1073888256
 1826 015c 00380240 		.word	1073887232
 1827 0160 00000000 		.word	AHBPrescTable
 1828 0164 00000000 		.word	SystemCoreClock
 1829 0168 00000000 		.word	uwTickPrio
 1830              		.cfi_endproc
 1831              	.LFE74:
 1833              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1834              		.align	1
 1835              		.global	HAL_RCC_GetHCLKFreq
 1836              		.syntax unified
 1837              		.thumb
 1838              		.thumb_func
 1839              		.fpu softvfp
 1841              	HAL_RCC_GetHCLKFreq:
 1842              	.LFB79:
1034:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1036:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1037:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1038:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         and updated within this function
1042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval HCLK frequency
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1044:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1045:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1843              		.loc 1 1045 1 is_stmt 1 view -0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              		@ link register save eliminated.
1046:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return SystemCoreClock;
 1848              		.loc 1 1046 3 view .LVU571
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1849              		.loc 1 1047 1 is_stmt 0 view .LVU572
 1850 0000 014B     		ldr	r3, .L163
 1851 0002 1868     		ldr	r0, [r3]
 1852 0004 7047     		bx	lr
 1853              	.L164:
 1854 0006 00BF     		.align	2
 1855              	.L163:
 1856 0008 00000000 		.word	SystemCoreClock
 1857              		.cfi_endproc
 1858              	.LFE79:
 1860              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1861              		.align	1
 1862              		.global	HAL_RCC_GetPCLK1Freq
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1866              		.fpu softvfp
 1868              	HAL_RCC_GetPCLK1Freq:
 1869              	.LFB80:
ARM GAS  /tmp/ccsp5bek.s 			page 75


1048:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1049:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1051:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval PCLK1 frequency
1054:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1055:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1056:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1870              		.loc 1 1056 1 is_stmt 1 view -0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874 0000 08B5     		push	{r3, lr}
 1875              	.LCFI15:
 1876              		.cfi_def_cfa_offset 8
 1877              		.cfi_offset 3, -8
 1878              		.cfi_offset 14, -4
1057:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC_CF
 1879              		.loc 1 1058 3 view .LVU574
 1880              		.loc 1 1058 11 is_stmt 0 view .LVU575
 1881 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1882              	.LVL131:
 1883              		.loc 1 1058 54 view .LVU576
 1884 0006 074B     		ldr	r3, .L167
 1885 0008 9B68     		ldr	r3, [r3, #8]
 1886              		.loc 1 1058 61 view .LVU577
 1887 000a 03F4E053 		and	r3, r3, #7168
 1888              	.LVL132:
 1889              	.LBB36:
 1890              	.LBI36:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1891              		.loc 2 981 31 is_stmt 1 view .LVU578
 1892              	.LBB37:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1893              		.loc 2 983 3 view .LVU579
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1894              		.loc 2 988 4 view .LVU580
 1895 000e 4FF4E052 		mov	r2, #7168
 1896              		.syntax unified
 1897              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1898 0012 92FAA2F2 		rbit r2, r2
 1899              	@ 0 "" 2
 1900              	.LVL133:
 1901              		.loc 2 1001 3 view .LVU581
 1902              		.loc 2 1001 3 is_stmt 0 view .LVU582
 1903              		.thumb
 1904              		.syntax unified
 1905              	.LBE37:
 1906              	.LBE36:
 1907              		.loc 1 1058 78 view .LVU583
 1908 0016 B2FA82F2 		clz	r2, r2
 1909 001a D340     		lsrs	r3, r3, r2
 1910              		.loc 1 1058 49 view .LVU584
 1911 001c 024A     		ldr	r2, .L167+4
 1912 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccsp5bek.s 			page 76


1059:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1913              		.loc 1 1059 1 view .LVU585
 1914 0020 D840     		lsrs	r0, r0, r3
 1915 0022 08BD     		pop	{r3, pc}
 1916              	.L168:
 1917              		.align	2
 1918              	.L167:
 1919 0024 00380240 		.word	1073887232
 1920 0028 00000000 		.word	APBPrescTable
 1921              		.cfi_endproc
 1922              	.LFE80:
 1924              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1925              		.align	1
 1926              		.global	HAL_RCC_GetPCLK2Freq
 1927              		.syntax unified
 1928              		.thumb
 1929              		.thumb_func
 1930              		.fpu softvfp
 1932              	HAL_RCC_GetPCLK2Freq:
 1933              	.LFB81:
1060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1061:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1062:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1063:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1065:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval PCLK2 frequency
1066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1068:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1934              		.loc 1 1068 1 is_stmt 1 view -0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938 0000 08B5     		push	{r3, lr}
 1939              	.LCFI16:
 1940              		.cfi_def_cfa_offset 8
 1941              		.cfi_offset 3, -8
 1942              		.cfi_offset 14, -4
1069:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1070:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_CFG
 1943              		.loc 1 1070 3 view .LVU587
 1944              		.loc 1 1070 11 is_stmt 0 view .LVU588
 1945 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1946              	.LVL134:
 1947              		.loc 1 1070 53 view .LVU589
 1948 0006 074B     		ldr	r3, .L171
 1949 0008 9B68     		ldr	r3, [r3, #8]
 1950              		.loc 1 1070 60 view .LVU590
 1951 000a 03F46043 		and	r3, r3, #57344
 1952              	.LVL135:
 1953              	.LBB38:
 1954              	.LBI38:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1955              		.loc 2 981 31 is_stmt 1 view .LVU591
 1956              	.LBB39:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1957              		.loc 2 983 3 view .LVU592
ARM GAS  /tmp/ccsp5bek.s 			page 77


 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1958              		.loc 2 988 4 view .LVU593
 1959 000e 4FF46042 		mov	r2, #57344
 1960              		.syntax unified
 1961              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1962 0012 92FAA2F2 		rbit r2, r2
 1963              	@ 0 "" 2
 1964              	.LVL136:
 1965              		.loc 2 1001 3 view .LVU594
 1966              		.loc 2 1001 3 is_stmt 0 view .LVU595
 1967              		.thumb
 1968              		.syntax unified
 1969              	.LBE39:
 1970              	.LBE38:
 1971              		.loc 1 1070 77 view .LVU596
 1972 0016 B2FA82F2 		clz	r2, r2
 1973 001a D340     		lsrs	r3, r3, r2
 1974              		.loc 1 1070 48 view .LVU597
 1975 001c 024A     		ldr	r2, .L171+4
 1976 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1071:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1977              		.loc 1 1071 1 view .LVU598
 1978 0020 D840     		lsrs	r0, r0, r3
 1979 0022 08BD     		pop	{r3, pc}
 1980              	.L172:
 1981              		.align	2
 1982              	.L171:
 1983 0024 00380240 		.word	1073887232
 1984 0028 00000000 		.word	APBPrescTable
 1985              		.cfi_endproc
 1986              	.LFE81:
 1988              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1989              		.align	1
 1990              		.global	HAL_RCC_GetOscConfig
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1994              		.fpu softvfp
 1996              	HAL_RCC_GetOscConfig:
 1997              	.LVL137:
 1998              	.LFB82:
1072:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1073:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1074:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1075:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * RCC configuration registers.
1076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
1077:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * will be configured.
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1079:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1081:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1999              		.loc 1 1081 1 is_stmt 1 view -0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003              		@ link register save eliminated.
1082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
ARM GAS  /tmp/ccsp5bek.s 			page 78


1083:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2004              		.loc 1 1083 3 view .LVU600
 2005              		.loc 1 1083 37 is_stmt 0 view .LVU601
 2006 0000 0F23     		movs	r3, #15
 2007 0002 0360     		str	r3, [r0]
1084:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2008              		.loc 1 1086 3 is_stmt 1 view .LVU602
 2009              		.loc 1 1086 10 is_stmt 0 view .LVU603
 2010 0004 3C4B     		ldr	r3, .L186
 2011 0006 1B68     		ldr	r3, [r3]
 2012              		.loc 1 1086 5 view .LVU604
 2013 0008 13F4802F 		tst	r3, #262144
 2014 000c 55D0     		beq	.L174
1087:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2015              		.loc 1 1088 5 is_stmt 1 view .LVU605
 2016              		.loc 1 1088 33 is_stmt 0 view .LVU606
 2017 000e 0523     		movs	r3, #5
 2018 0010 4360     		str	r3, [r0, #4]
 2019              	.L175:
1089:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1093:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1097:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1098:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1099:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2020              		.loc 1 1100 3 is_stmt 1 view .LVU607
 2021              		.loc 1 1100 10 is_stmt 0 view .LVU608
 2022 0012 394B     		ldr	r3, .L186
 2023 0014 1B68     		ldr	r3, [r3]
 2024              		.loc 1 1100 5 view .LVU609
 2025 0016 13F0010F 		tst	r3, #1
 2026 001a 59D0     		beq	.L177
1101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2027              		.loc 1 1102 5 is_stmt 1 view .LVU610
 2028              		.loc 1 1102 33 is_stmt 0 view .LVU611
 2029 001c 0123     		movs	r3, #1
 2030 001e C360     		str	r3, [r0, #12]
 2031              	.L178:
1103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> POSITION_VAL(RCC
 2032              		.loc 1 1109 3 is_stmt 1 view .LVU612
 2033              		.loc 1 1109 59 is_stmt 0 view .LVU613
ARM GAS  /tmp/ccsp5bek.s 			page 79


 2034 0020 3549     		ldr	r1, .L186
 2035 0022 0B68     		ldr	r3, [r1]
 2036              		.loc 1 1109 64 view .LVU614
 2037 0024 03F0F803 		and	r3, r3, #248
 2038              	.LVL138:
 2039              	.LBB40:
 2040              	.LBI40:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2041              		.loc 2 981 31 is_stmt 1 view .LVU615
 2042              	.LBB41:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2043              		.loc 2 983 3 view .LVU616
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2044              		.loc 2 988 4 view .LVU617
 2045 0028 F822     		movs	r2, #248
 2046              		.syntax unified
 2047              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2048 002a 92FAA2F2 		rbit r2, r2
 2049              	@ 0 "" 2
 2050              	.LVL139:
 2051              		.loc 2 1001 3 view .LVU618
 2052              		.loc 2 1001 3 is_stmt 0 view .LVU619
 2053              		.thumb
 2054              		.syntax unified
 2055              	.LBE41:
 2056              	.LBE40:
 2057              		.loc 1 1109 44 view .LVU620
 2058 002e B2FA82F2 		clz	r2, r2
 2059 0032 D340     		lsrs	r3, r3, r2
 2060              		.loc 1 1109 42 view .LVU621
 2061 0034 0361     		str	r3, [r0, #16]
1110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2062              		.loc 1 1112 3 is_stmt 1 view .LVU622
 2063              		.loc 1 1112 10 is_stmt 0 view .LVU623
 2064 0036 0B6F     		ldr	r3, [r1, #112]
 2065              		.loc 1 1112 5 view .LVU624
 2066 0038 13F0040F 		tst	r3, #4
 2067 003c 4BD0     		beq	.L179
1113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2068              		.loc 1 1114 5 is_stmt 1 view .LVU625
 2069              		.loc 1 1114 33 is_stmt 0 view .LVU626
 2070 003e 0523     		movs	r3, #5
 2071 0040 8360     		str	r3, [r0, #8]
 2072              	.L180:
1115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
ARM GAS  /tmp/ccsp5bek.s 			page 80


1125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2073              		.loc 1 1126 3 is_stmt 1 view .LVU627
 2074              		.loc 1 1126 10 is_stmt 0 view .LVU628
 2075 0042 2D4B     		ldr	r3, .L186
 2076 0044 5B6F     		ldr	r3, [r3, #116]
 2077              		.loc 1 1126 5 view .LVU629
 2078 0046 13F0010F 		tst	r3, #1
 2079 004a 4FD0     		beq	.L182
1127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2080              		.loc 1 1128 5 is_stmt 1 view .LVU630
 2081              		.loc 1 1128 33 is_stmt 0 view .LVU631
 2082 004c 0123     		movs	r3, #1
 2083 004e 4361     		str	r3, [r0, #20]
 2084              	.L183:
1129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2085              		.loc 1 1136 3 is_stmt 1 view .LVU632
 2086              		.loc 1 1136 10 is_stmt 0 view .LVU633
 2087 0050 294B     		ldr	r3, .L186
 2088 0052 1B68     		ldr	r3, [r3]
 2089              		.loc 1 1136 5 view .LVU634
 2090 0054 13F0807F 		tst	r3, #16777216
 2091 0058 4BD0     		beq	.L184
1137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2092              		.loc 1 1138 5 is_stmt 1 view .LVU635
 2093              		.loc 1 1138 37 is_stmt 0 view .LVU636
 2094 005a 0223     		movs	r3, #2
 2095 005c 8361     		str	r3, [r0, #24]
 2096              	.L185:
1139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2097              		.loc 1 1144 3 is_stmt 1 view .LVU637
 2098              		.loc 1 1144 52 is_stmt 0 view .LVU638
 2099 005e 264A     		ldr	r2, .L186
 2100 0060 5368     		ldr	r3, [r2, #4]
 2101              		.loc 1 1144 38 view .LVU639
 2102 0062 03F48003 		and	r3, r3, #4194304
 2103              		.loc 1 1144 36 view .LVU640
 2104 0066 C361     		str	r3, [r0, #28]
1145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2105              		.loc 1 1145 3 is_stmt 1 view .LVU641
 2106              		.loc 1 1145 47 is_stmt 0 view .LVU642
 2107 0068 5368     		ldr	r3, [r2, #4]
 2108              		.loc 1 1145 33 view .LVU643
ARM GAS  /tmp/ccsp5bek.s 			page 81


 2109 006a 03F03F03 		and	r3, r3, #63
 2110              		.loc 1 1145 31 view .LVU644
 2111 006e 0362     		str	r3, [r0, #32]
1146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PL
 2112              		.loc 1 1146 3 is_stmt 1 view .LVU645
 2113              		.loc 1 1146 48 is_stmt 0 view .LVU646
 2114 0070 5168     		ldr	r1, [r2, #4]
 2115              		.loc 1 1146 58 view .LVU647
 2116 0072 47F6C073 		movw	r3, #32704
 2117 0076 1940     		ands	r1, r1, r3
 2118              	.LVL140:
 2119              	.LBB42:
 2120              	.LBI42:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2121              		.loc 2 981 31 is_stmt 1 view .LVU648
 2122              	.LBB43:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2123              		.loc 2 983 3 view .LVU649
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2124              		.loc 2 988 4 view .LVU650
 2125              		.syntax unified
 2126              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2127 0078 93FAA3F3 		rbit r3, r3
 2128              	@ 0 "" 2
 2129              	.LVL141:
 2130              		.loc 2 1001 3 view .LVU651
 2131              		.loc 2 1001 3 is_stmt 0 view .LVU652
 2132              		.thumb
 2133              		.syntax unified
 2134              	.LBE43:
 2135              	.LBE42:
 2136              		.loc 1 1146 33 view .LVU653
 2137 007c B3FA83F3 		clz	r3, r3
 2138 0080 21FA03F3 		lsr	r3, r1, r3
 2139              		.loc 1 1146 31 view .LVU654
 2140 0084 4362     		str	r3, [r0, #36]
1147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2141              		.loc 1 1147 3 is_stmt 1 view .LVU655
 2142              		.loc 1 1147 50 is_stmt 0 view .LVU656
 2143 0086 5368     		ldr	r3, [r2, #4]
 2144              		.loc 1 1147 60 view .LVU657
 2145 0088 03F44033 		and	r3, r3, #196608
 2146              		.loc 1 1147 80 view .LVU658
 2147 008c 03F58033 		add	r3, r3, #65536
 2148              		.loc 1 1147 102 view .LVU659
 2149 0090 5B00     		lsls	r3, r3, #1
 2150              	.LVL142:
 2151              	.LBB44:
 2152              	.LBI44:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2153              		.loc 2 981 31 is_stmt 1 view .LVU660
 2154              	.LBB45:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2155              		.loc 2 983 3 view .LVU661
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2156              		.loc 2 988 4 view .LVU662
 2157 0092 4FF44031 		mov	r1, #196608
ARM GAS  /tmp/ccsp5bek.s 			page 82


 2158              		.syntax unified
 2159              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2160 0096 91FAA1F1 		rbit r1, r1
 2161              	@ 0 "" 2
 2162              	.LVL143:
 2163              		.loc 2 1001 3 view .LVU663
 2164              		.loc 2 1001 3 is_stmt 0 view .LVU664
 2165              		.thumb
 2166              		.syntax unified
 2167              	.LBE45:
 2168              	.LBE44:
 2169              		.loc 1 1147 33 view .LVU665
 2170 009a B1FA81F1 		clz	r1, r1
 2171 009e CB40     		lsrs	r3, r3, r1
 2172              		.loc 1 1147 31 view .LVU666
 2173 00a0 8362     		str	r3, [r0, #40]
1148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> POSITION_VAL(RCC_PL
 2174              		.loc 1 1148 3 is_stmt 1 view .LVU667
 2175              		.loc 1 1148 48 is_stmt 0 view .LVU668
 2176 00a2 5368     		ldr	r3, [r2, #4]
 2177              		.loc 1 1148 58 view .LVU669
 2178 00a4 03F07063 		and	r3, r3, #251658240
 2179              	.LVL144:
 2180              	.LBB46:
 2181              	.LBI46:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2182              		.loc 2 981 31 is_stmt 1 view .LVU670
 2183              	.LBB47:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2184              		.loc 2 983 3 view .LVU671
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2185              		.loc 2 988 4 view .LVU672
 2186 00a8 4FF07062 		mov	r2, #251658240
 2187              		.syntax unified
 2188              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2189 00ac 92FAA2F2 		rbit r2, r2
 2190              	@ 0 "" 2
 2191              	.LVL145:
 2192              		.loc 2 1001 3 view .LVU673
 2193              		.loc 2 1001 3 is_stmt 0 view .LVU674
 2194              		.thumb
 2195              		.syntax unified
 2196              	.LBE47:
 2197              	.LBE46:
 2198              		.loc 1 1148 33 view .LVU675
 2199 00b0 B2FA82F2 		clz	r2, r2
 2200 00b4 D340     		lsrs	r3, r3, r2
 2201              		.loc 1 1148 31 view .LVU676
 2202 00b6 C362     		str	r3, [r0, #44]
1149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 2203              		.loc 1 1149 1 view .LVU677
 2204 00b8 7047     		bx	lr
 2205              	.L174:
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2206              		.loc 1 1090 8 is_stmt 1 view .LVU678
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2207              		.loc 1 1090 15 is_stmt 0 view .LVU679
ARM GAS  /tmp/ccsp5bek.s 			page 83


 2208 00ba 0F4B     		ldr	r3, .L186
 2209 00bc 1B68     		ldr	r3, [r3]
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2210              		.loc 1 1090 10 view .LVU680
 2211 00be 13F4803F 		tst	r3, #65536
 2212 00c2 02D0     		beq	.L176
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2213              		.loc 1 1092 5 is_stmt 1 view .LVU681
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2214              		.loc 1 1092 33 is_stmt 0 view .LVU682
 2215 00c4 0123     		movs	r3, #1
 2216 00c6 4360     		str	r3, [r0, #4]
 2217 00c8 A3E7     		b	.L175
 2218              	.L176:
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2219              		.loc 1 1096 5 is_stmt 1 view .LVU683
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2220              		.loc 1 1096 33 is_stmt 0 view .LVU684
 2221 00ca 0023     		movs	r3, #0
 2222 00cc 4360     		str	r3, [r0, #4]
 2223 00ce A0E7     		b	.L175
 2224              	.L177:
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2225              		.loc 1 1106 5 is_stmt 1 view .LVU685
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2226              		.loc 1 1106 33 is_stmt 0 view .LVU686
 2227 00d0 0023     		movs	r3, #0
 2228 00d2 C360     		str	r3, [r0, #12]
 2229 00d4 A4E7     		b	.L178
 2230              	.L179:
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2231              		.loc 1 1116 8 is_stmt 1 view .LVU687
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2232              		.loc 1 1116 15 is_stmt 0 view .LVU688
 2233 00d6 084B     		ldr	r3, .L186
 2234 00d8 1B6F     		ldr	r3, [r3, #112]
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2235              		.loc 1 1116 10 view .LVU689
 2236 00da 13F0010F 		tst	r3, #1
 2237 00de 02D0     		beq	.L181
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2238              		.loc 1 1118 5 is_stmt 1 view .LVU690
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2239              		.loc 1 1118 33 is_stmt 0 view .LVU691
 2240 00e0 0123     		movs	r3, #1
 2241 00e2 8360     		str	r3, [r0, #8]
 2242 00e4 ADE7     		b	.L180
 2243              	.L181:
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2244              		.loc 1 1122 5 is_stmt 1 view .LVU692
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2245              		.loc 1 1122 33 is_stmt 0 view .LVU693
 2246 00e6 0023     		movs	r3, #0
 2247 00e8 8360     		str	r3, [r0, #8]
 2248 00ea AAE7     		b	.L180
 2249              	.L182:
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccsp5bek.s 			page 84


 2250              		.loc 1 1132 5 is_stmt 1 view .LVU694
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2251              		.loc 1 1132 33 is_stmt 0 view .LVU695
 2252 00ec 0023     		movs	r3, #0
 2253 00ee 4361     		str	r3, [r0, #20]
 2254 00f0 AEE7     		b	.L183
 2255              	.L184:
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2256              		.loc 1 1142 5 is_stmt 1 view .LVU696
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2257              		.loc 1 1142 37 is_stmt 0 view .LVU697
 2258 00f2 0123     		movs	r3, #1
 2259 00f4 8361     		str	r3, [r0, #24]
 2260 00f6 B2E7     		b	.L185
 2261              	.L187:
 2262              		.align	2
 2263              	.L186:
 2264 00f8 00380240 		.word	1073887232
 2265              		.cfi_endproc
 2266              	.LFE82:
 2268              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2269              		.align	1
 2270              		.global	HAL_RCC_GetClockConfig
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu softvfp
 2276              	HAL_RCC_GetClockConfig:
 2277              	.LVL146:
 2278              	.LFB83:
1150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * RCC configuration registers.
1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * will be configured.
1156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 2279              		.loc 1 1160 1 is_stmt 1 view -0
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 0
 2282              		@ frame_needed = 0, uses_anonymous_args = 0
 2283              		@ link register save eliminated.
1161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2284              		.loc 1 1162 3 view .LVU699
 2285              		.loc 1 1162 32 is_stmt 0 view .LVU700
 2286 0000 0F23     		movs	r3, #15
 2287 0002 0360     		str	r3, [r0]
1163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2288              		.loc 1 1165 3 is_stmt 1 view .LVU701
 2289              		.loc 1 1165 51 is_stmt 0 view .LVU702
ARM GAS  /tmp/ccsp5bek.s 			page 85


 2290 0004 0B4B     		ldr	r3, .L189
 2291 0006 9A68     		ldr	r2, [r3, #8]
 2292              		.loc 1 1165 37 view .LVU703
 2293 0008 02F00302 		and	r2, r2, #3
 2294              		.loc 1 1165 35 view .LVU704
 2295 000c 4260     		str	r2, [r0, #4]
1166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2296              		.loc 1 1168 3 is_stmt 1 view .LVU705
 2297              		.loc 1 1168 52 is_stmt 0 view .LVU706
 2298 000e 9A68     		ldr	r2, [r3, #8]
 2299              		.loc 1 1168 38 view .LVU707
 2300 0010 02F0F002 		and	r2, r2, #240
 2301              		.loc 1 1168 36 view .LVU708
 2302 0014 8260     		str	r2, [r0, #8]
1169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2303              		.loc 1 1171 3 is_stmt 1 view .LVU709
 2304              		.loc 1 1171 53 is_stmt 0 view .LVU710
 2305 0016 9A68     		ldr	r2, [r3, #8]
 2306              		.loc 1 1171 39 view .LVU711
 2307 0018 02F4E052 		and	r2, r2, #7168
 2308              		.loc 1 1171 37 view .LVU712
 2309 001c C260     		str	r2, [r0, #12]
1172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2310              		.loc 1 1174 3 is_stmt 1 view .LVU713
 2311              		.loc 1 1174 54 is_stmt 0 view .LVU714
 2312 001e 9B68     		ldr	r3, [r3, #8]
 2313              		.loc 1 1174 39 view .LVU715
 2314 0020 DB08     		lsrs	r3, r3, #3
 2315 0022 03F4E053 		and	r3, r3, #7168
 2316              		.loc 1 1174 37 view .LVU716
 2317 0026 0361     		str	r3, [r0, #16]
1175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2318              		.loc 1 1177 3 is_stmt 1 view .LVU717
 2319              		.loc 1 1177 32 is_stmt 0 view .LVU718
 2320 0028 034B     		ldr	r3, .L189+4
 2321 002a 1B68     		ldr	r3, [r3]
 2322              		.loc 1 1177 16 view .LVU719
 2323 002c 03F00F03 		and	r3, r3, #15
 2324              		.loc 1 1177 14 view .LVU720
 2325 0030 0B60     		str	r3, [r1]
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 2326              		.loc 1 1178 1 view .LVU721
 2327 0032 7047     		bx	lr
 2328              	.L190:
 2329              		.align	2
 2330              	.L189:
 2331 0034 00380240 		.word	1073887232
 2332 0038 003C0240 		.word	1073888256
 2333              		.cfi_endproc
ARM GAS  /tmp/ccsp5bek.s 			page 86


 2334              	.LFE83:
 2336              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2337              		.align	1
 2338              		.weak	HAL_RCC_CSSCallback
 2339              		.syntax unified
 2340              		.thumb
 2341              		.thumb_func
 2342              		.fpu softvfp
 2344              	HAL_RCC_CSSCallback:
 2345              	.LFB85:
1179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
1187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
1197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 2346              		.loc 1 1203 1 is_stmt 1 view -0
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 0
 2349              		@ frame_needed = 0, uses_anonymous_args = 0
 2350              		@ link register save eliminated.
1204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****    */
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 2351              		.loc 1 1207 1 view .LVU723
 2352 0000 7047     		bx	lr
 2353              		.cfi_endproc
 2354              	.LFE85:
 2356              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2357              		.align	1
 2358              		.global	HAL_RCC_NMI_IRQHandler
 2359              		.syntax unified
 2360              		.thumb
 2361              		.thumb_func
 2362              		.fpu softvfp
 2364              	HAL_RCC_NMI_IRQHandler:
 2365              	.LFB84:
ARM GAS  /tmp/ccsp5bek.s 			page 87


1186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2366              		.loc 1 1186 1 view -0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 0
 2369              		@ frame_needed = 0, uses_anonymous_args = 0
 2370 0000 08B5     		push	{r3, lr}
 2371              	.LCFI17:
 2372              		.cfi_def_cfa_offset 8
 2373              		.cfi_offset 3, -8
 2374              		.cfi_offset 14, -4
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2375              		.loc 1 1188 3 view .LVU725
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2376              		.loc 1 1188 6 is_stmt 0 view .LVU726
 2377 0002 064B     		ldr	r3, .L196
 2378 0004 DB68     		ldr	r3, [r3, #12]
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2379              		.loc 1 1188 5 view .LVU727
 2380 0006 13F0800F 		tst	r3, #128
 2381 000a 00D1     		bne	.L195
 2382              	.L192:
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 2383              		.loc 1 1196 1 view .LVU728
 2384 000c 08BD     		pop	{r3, pc}
 2385              	.L195:
1191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 2386              		.loc 1 1191 5 is_stmt 1 view .LVU729
 2387 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2388              	.LVL147:
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2389              		.loc 1 1194 5 view .LVU730
 2390 0012 024B     		ldr	r3, .L196
 2391 0014 8022     		movs	r2, #128
 2392 0016 9A73     		strb	r2, [r3, #14]
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 2393              		.loc 1 1196 1 is_stmt 0 view .LVU731
 2394 0018 F8E7     		b	.L192
 2395              	.L197:
 2396 001a 00BF     		.align	2
 2397              	.L196:
 2398 001c 00380240 		.word	1073887232
 2399              		.cfi_endproc
 2400              	.LFE84:
 2402              		.text
 2403              	.Letext0:
 2404              		.file 3 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 2405              		.file 4 "/home/onur/STM32Toolchain/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 2406              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 2407              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f215xx.h"
 2408              		.file 7 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"
 2409              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 2410              		.file 9 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_rcc.h"
 2411              		.file 10 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_gpio.h"
 2412              		.file 11 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
ARM GAS  /tmp/ccsp5bek.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f2xx_hal_rcc.c
     /tmp/ccsp5bek.s:16     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccsp5bek.s:24     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccsp5bek.s:254    .text.HAL_RCC_DeInit:0000000000000100 $d
     /tmp/ccsp5bek.s:264    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccsp5bek.s:271    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccsp5bek.s:828    .text.HAL_RCC_OscConfig:0000000000000264 $d
     /tmp/ccsp5bek.s:834    .text.HAL_RCC_OscConfig:0000000000000270 $t
     /tmp/ccsp5bek.s:1123   .text.HAL_RCC_OscConfig:00000000000003a8 $d
     /tmp/ccsp5bek.s:1130   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccsp5bek.s:1137   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccsp5bek.s:1293   .text.HAL_RCC_MCOConfig:0000000000000090 $d
     /tmp/ccsp5bek.s:1300   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccsp5bek.s:1307   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccsp5bek.s:1324   .text.HAL_RCC_EnableCSS:0000000000000008 $d
     /tmp/ccsp5bek.s:1329   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccsp5bek.s:1336   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccsp5bek.s:1353   .text.HAL_RCC_DisableCSS:0000000000000008 $d
     /tmp/ccsp5bek.s:1359   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccsp5bek.s:1366   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccsp5bek.s:1496   .text.HAL_RCC_GetSysClockFreq:00000000000000c8 $d
     /tmp/ccsp5bek.s:1503   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccsp5bek.s:1510   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccsp5bek.s:1825   .text.HAL_RCC_ClockConfig:0000000000000158 $d
     /tmp/ccsp5bek.s:1834   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccsp5bek.s:1841   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccsp5bek.s:1856   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccsp5bek.s:1861   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccsp5bek.s:1868   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccsp5bek.s:1919   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccsp5bek.s:1925   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccsp5bek.s:1932   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccsp5bek.s:1983   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccsp5bek.s:1989   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccsp5bek.s:1996   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccsp5bek.s:2264   .text.HAL_RCC_GetOscConfig:00000000000000f8 $d
     /tmp/ccsp5bek.s:2269   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccsp5bek.s:2276   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccsp5bek.s:2331   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/ccsp5bek.s:2337   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccsp5bek.s:2344   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccsp5bek.s:2357   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccsp5bek.s:2364   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccsp5bek.s:2398   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
AHBPrescTable
APBPrescTable
